<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="/jekyll-theme-yat/feed.xml" rel="self" type="application/atom+xml" /><link href="/jekyll-theme-yat/" rel="alternate" type="text/html" /><updated>2025-01-27T06:58:16+00:00</updated><id>/jekyll-theme-yat/feed.xml</id><title type="html">우린 왜 자꾸 코딩하는가</title><subtitle>각박한 세상 속 우리가 자꾸 코딩하는 이유를 찾아가는 페이지</subtitle><author><name>Bonazoey</name></author><entry><title type="html">LLM</title><link href="/jekyll-theme-yat/python/2025/01/15/LLM.html" rel="alternate" type="text/html" title="LLM" /><published>2025-01-15T00:00:00+00:00</published><updated>2025-01-15T00:00:00+00:00</updated><id>/jekyll-theme-yat/python/2025/01/15/LLM</id><content type="html" xml:base="/jekyll-theme-yat/python/2025/01/15/LLM.html"><![CDATA[<h2 id="llm">LLM?</h2>

<p>거대언어모델(Large Language Model, LLM)은 대규모 텍스트 데이터를 학습하여 자연어를 이해하고 생성할 수 있는 모델을 의미한다. LLM은 주로 딥러닝 기술을 사용하여 구축되며, 수십억 개의 파라미터를 포함할 수 있다. 이 모델들은 문장 완성, 번역, 요약 등 다양한 자연어 처리 작업에 활용된다.</p>

<p>다시 말해, LLM은 언어 모델에 다량의 글 데이터를 읽혀 학습시킨 것으로 인간으로 치면 뉴런인 파라미터가 일정 개수 이상으로 많아지면 LLM이라고 부르며, 이것을 RLHF라는 파인튜닝을 통해 의도한 대로 만든 것이 ChatGPT이다.</p>

<h3 id="next-token-prediction">Next Token Prediction</h3>

<p>LLM의 학습 과정은 많은 양의 텍스트를 대상으로 다음 단어를 예측하는 과정을 통한다. 여러 경우의 수 중 가장 확률이 높은 단어를 선택해 지식과 추론 능력을 획득한다.</p>

<h3 id="prompt">Prompt</h3>

<p>프롬프트는 컨텍스트 창을 통해 모델에 전달되는 모든 언어를 말하며 의도된 작업을 처리하기 위해 LM에 통과되는 모든 지시사항과 맥락을 포함한다.</p>

<h4 id="구성">구성</h4>

<ol>
  <li>
    <p>instruction(지시사항) : 모델이 수행할 작업에 대한 구체적인 묘사가 포함된 부분</p>
  </li>
  <li>
    <p>context(맥락) : 수행작업에 대해 모델이 참고할 맥락 정보</p>
  </li>
  <li>
    <p>input data(입력 데이터) : 작업을 수행할 대상이 되는 구체적 데이터</p>
  </li>
  <li>
    <p>output indicator(출력 지시정보) : 출력의 형태를 시/유도하는 정보를 포함</p>
  </li>
</ol>]]></content><author><name>Bonazoey</name></author><category term="Python" /><category term="AI" /><category term="LLM" /><summary type="html"><![CDATA[LLM?]]></summary></entry><entry><title type="html">[Data Analysis] 데이터 프레임</title><link href="/jekyll-theme-yat/python/2025/01/14/dataFrame.html" rel="alternate" type="text/html" title="[Data Analysis] 데이터 프레임" /><published>2025-01-14T00:00:00+00:00</published><updated>2025-01-14T00:00:00+00:00</updated><id>/jekyll-theme-yat/python/2025/01/14/dataFrame</id><content type="html" xml:base="/jekyll-theme-yat/python/2025/01/14/dataFrame.html"><![CDATA[<p>파이썬 툴은 Anaconda를 설치하였고, Jupyter lab이용한다.</p>

<p>Jupyter lab을 사용하는 이유는 기존에 많이 사용하는 IDE (VScode, Pycharm, 등등)은 전체 코드를 실행해야하는 반면</p>

<p>Jypyter lab은 코드 한 줄씩 실행이 가능하여 코드 테스트가 쉽고, 데이터를 다루기에 적합하기 때문이다.</p>

<hr />

<h2 id="1-패키지">1. 패키지</h2>

<p>해당 포스트의 사용 패키지</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span> <span class="c1"># 데이터 핸들링 패키지
</span><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span> <span class="c1"># 요약통계량 연산
</span><span class="kn">import</span> <span class="n">seaborn</span> <span class="k">as</span> <span class="n">sns</span> <span class="c1"># 그래프
</span></code></pre></div></div>

<h3 id="11-설치">1.1. 설치</h3>

<p>아나콘다 프롬프트에 <code class="language-plaintext highlighter-rouge">conda install pandas</code> 라고 입력하면 해당 패키지가 설치됨</p>

<h2 id="2-함수">2. 함수</h2>

<h3 id="21-내장-함수">2.1. 내장 함수</h3>

<p>앞에 패키지 명을 쓰지 않고 바로 사용할 수 있다.</p>

<p><code class="language-plaintext highlighter-rouge">info()</code> : 해당 데이터의 정보를 볼 수 있다. (데이터 타입 등)</p>

<p><code class="language-plaintext highlighter-rouge">sum()</code> : 합</p>

<p><code class="language-plaintext highlighter-rouge">mean()</code> : 평균</p>

<p>.</p>

<p>.</p>

<p>.</p>

<p><code class="language-plaintext highlighter-rouge">agg(1 = (2, 3))</code> : 요약통계량 구하기, 2 변수의 3 연산 값을 1 변수에 대입</p>

<p><code class="language-plaintext highlighter-rouge">head()</code> : 상위 데이터 n개 추출, 파라미터 없을 시 5개 추출</p>

<p><code class="language-plaintext highlighter-rouge">tail()</code> : 하위 데이터 n개 추출, 파라미터 없을 시 5개 추출</p>

<h3 id="22-패키지-함수">2.2. 패키지 함수</h3>

<p>패키지명 뒤에 함수명이 온다.</p>

<p>해당 패키지에 무슨 함수가 있는지 모르면 검색해보자..</p>

<p><code class="language-plaintext highlighter-rouge">pd.DataFrame()</code> : 데이터 프레임화 하기</p>

<p><code class="language-plaintext highlighter-rouge">pd.read_csv()</code> : csv 파일 불러오기</p>

<p><code class="language-plaintext highlighter-rouge">?.to_csv()</code> : csv로 저장</p>

<p><code class="language-plaintext highlighter-rouge">pd.read_excel()</code> : excel 파일 불러오기</p>

<p><code class="language-plaintext highlighter-rouge">np.where(1, 2, 3)</code> : 1 조건에 해당할 경우 2, 아닐 경우 3</p>

<p><code class="language-plaintext highlighter-rouge">sns.boxplot()</code> : 박스 플롯으로 나타내기</p>

<p><code class="language-plaintext highlighter-rouge">sns.countplot(data = 1, x = 2, hue = 3)</code> : 카운트 플롯으로 나타내는데 ..</p>

<p>.</p>

<p>.</p>

<h3 id="23-기타">2.3. 기타</h3>

<p><code class="language-plaintext highlighter-rouge">\</code> : 메서드 체이닝, 가독성을 위해 줄 바꿈할 때 사용한다.</p>

<h2 id="3-데이터-추출">3. 데이터 추출</h2>

<h3 id="31-조건-추출">3.1. 조건 추출</h3>

<p>query 함수는 조건에 해당하는 데이터를 추출할 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exam</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="sh">'</span><span class="s">nclass == 1</span><span class="sh">'</span><span class="p">)</span> <span class="c1"># nclass 변수가 1인 데이터만 추출
</span><span class="n">exam</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="sh">'</span><span class="s">math &gt; 50</span><span class="sh">'</span><span class="p">)</span> <span class="c1"># math가 50보다 큰 데이터만 추출
</span><span class="n">exam</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="sh">'</span><span class="s">nclass in [1, 3, 5]</span><span class="sh">'</span><span class="p">)</span> <span class="c1"># nclass 변수가 1, 3, 5인 데이터만 추출
</span><span class="p">.</span>
<span class="p">.</span>
</code></pre></div></div>

<h3 id="32-변수-추출">3.2. 변수 추출</h3>

<p>원하는 변수 추출은 ‘[]’를 사용한다</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">]</span> <span class="c1"># 시리즈 형태로 추출
</span><span class="n">exam</span><span class="p">[[</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">]]</span> <span class="c1"># 데이터 프레임 형태로 추출
</span></code></pre></div></div>

<h3 id="33-변수-제외">3.3. 변수 제외</h3>

<p>해당 변수 제외하고 추출하고 싶다면 <code class="language-plaintext highlighter-rouge">drop()</code> 함수를 사용한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exam</span><span class="p">.</span><span class="nf">drop</span><span class="p">(</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">english</span><span class="sh">'</span><span class="p">])</span> <span class="c1"># math와 english 변수를 제외 하고 추출
</span></code></pre></div></div>

<h3 id="34-혼합-추출">3.4. 혼합 추출</h3>

<p>변수 추출 시 조건을 주고싶으면 그냥 같이 쓰면 됨</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exam</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="sh">'</span><span class="s">nclass == 2</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">]</span> <span class="c1"># nclass가 2인 데이터의 math 변수만 추출
</span></code></pre></div></div>

<h2 id="4-데이터-정렬">4. 데이터 정렬</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exam</span><span class="p">.</span><span class="nf">sort_values</span><span class="p">(</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">)</span> <span class="c1"># math 변수 오름차순으로 정렬
</span><span class="n">exam</span><span class="p">.</span><span class="nf">sort_values</span><span class="p">(</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">,</span> <span class="n">ascending</span> <span class="o">=</span> <span class="bp">False</span><span class="p">)</span> <span class="c1"># math 변수 내림차순으로 정렬
</span>
<span class="c1"># 여러 변수에 대해 정렬도 똑같다.
</span><span class="n">exam</span><span class="p">.</span><span class="nf">sort_values</span><span class="p">([</span><span class="sh">'</span><span class="s">nclass</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">],</span> <span class="n">ascending</span> <span class="o">=</span> <span class="p">[</span><span class="bp">True</span><span class="p">,</span> <span class="bp">False</span><span class="p">])</span> <span class="c1"># nclass 변수에 대해 오름차순, math 변수에 대해 내림차순 정렬
</span></code></pre></div></div>

<h2 id="5-파생-변수">5. 파생 변수</h2>

<p>데이터 프레임에 새로운 변수를 추가하려면 assign을 사용하면 된다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 변수 math, english, exam의 합을 total이라는 변수에 담아 exam 데이터 프레임에 추가
</span><span class="n">exam</span><span class="p">.</span><span class="nf">assign</span><span class="p">(</span><span class="n">total</span> <span class="o">=</span> <span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">english</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">science</span><span class="sh">'</span><span class="p">])</span> 
</code></pre></div></div>

<p>함수 중첩 사용도 가능하다</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># numpy 패키지 임포트
</span><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="c1"># numpy의 where에 해당하는 값을 test 변수에 넣고 exam 데이터 프레임에 추가함
</span><span class="n">exam</span><span class="p">.</span><span class="nf">assign</span><span class="p">(</span><span class="n">test</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">where</span><span class="p">(</span><span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">science</span><span class="sh">'</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">60</span><span class="p">,</span> <span class="sh">'</span><span class="s">pass</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">fail</span><span class="sh">'</span><span class="p">))</span>
</code></pre></div></div>

<p>람다도 이용 가능함!</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 둘이 같음
</span><span class="n">exam</span><span class="p">.</span><span class="nf">assign</span><span class="p">(</span><span class="n">total</span> <span class="o">=</span> <span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">english</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">science</span><span class="sh">'</span><span class="p">])</span>
<span class="n">exam</span><span class="p">.</span><span class="nf">assign</span><span class="p">(</span><span class="n">total</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">[</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">x</span><span class="p">[</span><span class="sh">'</span><span class="s">english</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">x</span><span class="p">[</span><span class="sh">'</span><span class="s">science</span><span class="sh">'</span><span class="p">])</span>
</code></pre></div></div>

<p>아래는 람다 이용해야만 함..</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exam</span><span class="p">.</span><span class="nf">assign</span><span class="p">(</span><span class="n">total</span> <span class="o">=</span> <span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">english</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">science</span><span class="sh">'</span><span class="p">],</span>
            <span class="n">mean</span> <span class="o">=</span> <span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">total</span><span class="sh">'</span><span class="p">]</span> <span class="o">/</span> <span class="mi">3</span><span class="p">)</span>
<span class="c1"># keyError : 'total' -&gt; 아직 total이라는 변수가 할당되지 않아 찾을 수 없어 에러가 뜸
</span>
<span class="n">exam</span><span class="p">.</span><span class="nf">assign</span><span class="p">(</span><span class="n">total</span> <span class="o">=</span> <span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">english</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">science</span><span class="sh">'</span><span class="p">],</span>
            <span class="n">mean</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">[</span><span class="sh">'</span><span class="s">total</span><span class="sh">'</span><span class="p">]</span> <span class="o">/</span> <span class="mi">3</span><span class="p">)</span>
<span class="c1"># 위와 같이 람다를 이용하면 assign에 의해 total이 추가된 변수인 것을 인식하고 데이터 편집이 가능
</span>
<span class="n">exam</span><span class="p">.</span><span class="nf">assign</span><span class="p">(</span><span class="n">total</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">[</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">x</span><span class="p">[</span><span class="sh">'</span><span class="s">english</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">x</span><span class="p">[</span><span class="sh">'</span><span class="s">science</span><span class="sh">'</span><span class="p">],</span>
            <span class="n">mean</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">[</span><span class="sh">'</span><span class="s">total</span><span class="sh">'</span><span class="p">]</span> <span class="o">/</span> <span class="mi">3</span><span class="p">)</span>
<span class="c1"># 결국은 이렇게 사용함
</span></code></pre></div></div>

<h2 id="6-데이터-요약">6. 데이터 요약</h2>

<p><code class="language-plaintext highlighter-rouge">agg</code> 함수를 이용해 요약통계량을 구한다</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exam</span><span class="p">.</span><span class="nf">agg</span><span class="p">(</span><span class="n">mean_math</span> <span class="o">=</span> <span class="p">(</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">mean</span><span class="sh">'</span><span class="p">))</span> <span class="c1"># math 평균 산출
</span></code></pre></div></div>

<h3 id="61-집단별-요약">6.1. 집단별 요약</h3>

<p><code class="language-plaintext highlighter-rouge">groupby()</code> 함수를 사용해 집단별로 구할 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exam</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">nclass</span><span class="sh">'</span><span class="p">)</span> \ <span class="c1"># nclass 별로 분리
</span>    <span class="p">.</span><span class="nf">agg</span><span class="p">(</span><span class="n">mean_math</span> <span class="o">=</span> <span class="p">(</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">mean</span><span class="sh">'</span><span class="p">))</span> <span class="c1"># math 평균 산출
</span></code></pre></div></div>

<p>한 번에 구할 수도 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exam</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">nclass</span><span class="sh">'</span><span class="p">)</span> \ <span class="c1"># nclass 별로 분리
</span>    <span class="p">.</span><span class="nf">agg</span><span class="p">(</span><span class="n">mean_math</span> <span class="o">=</span> <span class="p">(</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">mean</span><span class="sh">'</span><span class="p">),</span> <span class="c1"># math 평균 산출
</span>        <span class="n">sum_math</span> <span class="o">=</span> <span class="p">(</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">sum</span><span class="sh">'</span><span class="p">),</span> <span class="c1"># math 합 산출
</span>        <span class="n">median_math</span> <span class="o">=</span> <span class="p">(</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">median</span><span class="sh">'</span><span class="p">),</span> <span class="c1"># math 중앙값 산출
</span>        <span class="n">n</span> <span class="o">=</span> <span class="p">(</span><span class="sh">'</span><span class="s">nclass</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">count</span><span class="sh">'</span><span class="p">))</span> <span class="c1"># 빈도 (학생 수)
</span></code></pre></div></div>

<p>요약통계량으로 구한 변수를 출력하면 데이터 프레임으로 나타나지 않고 인덱스의 형태로 나타나게 된다. groupby 함수에 as_index 파라미터를 False로 지정해주면 인덱스가 아닌 데이터 프레임으로 나타낼 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exam</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">nclass</span><span class="sh">'</span><span class="p">,</span> <span class="n">as_index</span> <span class="o">=</span> <span class="bp">False</span><span class="p">)</span> \
    <span class="p">.</span><span class="nf">agg</span><span class="p">(</span><span class="n">mean_math</span> <span class="o">=</span> <span class="p">(</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">mean</span><span class="sh">'</span><span class="p">))</span>
</code></pre></div></div>

<h4 id="611-하위-집단별로-나누기">6.1.1. 하위 집단별로 나누기</h4>

<p>groupby 시 하위 집단으로 또 나눌 수 있음</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mpg</span><span class="p">.</span><span class="nf">groupby</span><span class="p">([</span><span class="sh">'</span><span class="s">manufacturer</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">drv</span><span class="sh">'</span><span class="p">])</span> \ <span class="c1"># manufacturer로 그룹화 후 그 안에서 drv로 하위 그룹화
</span>    <span class="p">.</span><span class="nf">agg</span><span class="p">(</span><span class="n">mean_cty</span> <span class="o">=</span> <span class="p">(</span><span class="sh">'</span><span class="s">cty</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">mean</span><span class="sh">'</span><span class="p">))</span>
</code></pre></div></div>

<h3 id="62-다른-방법">6.2. 다른 방법</h3>

<p><code class="language-plaintext highlighter-rouge">agg()</code> 함수를 사용하지 않고 요약통계량을 구할 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mpg</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">drv</span><span class="sh">'</span><span class="p">)</span> \
    <span class="p">.</span><span class="nf">agg</span><span class="p">(</span><span class="n">n</span> <span class="o">=</span> <span class="p">(</span><span class="sh">'</span><span class="s">drv</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">count</span><span class="sh">'</span><span class="p">))</span>

<span class="n">mpg</span><span class="p">[</span><span class="sh">'</span><span class="s">drv</span><span class="sh">'</span><span class="p">].</span><span class="nf">value_counts</span><span class="p">()</span>

<span class="c1"># 위와 아래 출력 값은 똑같이 나오지만 `query` 함수를 사용할 때 문제가 될 수 있다.
# `query` 함수는 데이터 프레임에만 사용할 수 있는데 아래의 값의 경우 데이터 프레임이 아닌 시리즈 형태로 나오기 때문이다.
</span>
<span class="n">mpg</span><span class="p">[</span><span class="sh">'</span><span class="s">drv</span><span class="sh">'</span><span class="p">].</span><span class="nf">value_counts</span><span class="p">()</span> \
          <span class="p">.</span><span class="nf">to_frame</span><span class="p">(</span><span class="sh">'</span><span class="s">n</span><span class="sh">'</span><span class="p">)</span> \
          <span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="sh">'</span><span class="s">n &gt; 100</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># 뭐 이런식으로 `to_frame()`을 사용하여 데이터 프레임화 한 후 사용할 수 있긴하다.
</span></code></pre></div></div>

<h3 id="63-자주-사용하는-요약통계량-함수">6.3. 자주 사용하는 요약통계량 함수</h3>

<p><code class="language-plaintext highlighter-rouge">sum()</code> : 합</p>

<p><code class="language-plaintext highlighter-rouge">mean()</code> : 평균</p>

<p><code class="language-plaintext highlighter-rouge">max()</code> : 최대값</p>

<p><code class="language-plaintext highlighter-rouge">min()</code> : 최소값</p>

<p><code class="language-plaintext highlighter-rouge">len()</code> : 개수</p>

<p><code class="language-plaintext highlighter-rouge">std()</code> : 표준편차</p>

<p><code class="language-plaintext highlighter-rouge">count()</code> : 빈도(개수)</p>

<h2 id="7-데이터-시각화-그래프">7. 데이터 시각화 (그래프)</h2>

<p><code class="language-plaintext highlighter-rouge">seaborn</code> 패키지를 사용한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">seaborn</span> <span class="k">as</span> <span class="n">sns</span>
</code></pre></div></div>

<h3 id="71-산점도">7.1. 산점도</h3>

<p>나이와 소득처럼 연속 값으로 된 두 변수의 관계를 표현할 때 사용한다.</p>

<p><code class="language-plaintext highlighter-rouge">sns.scatterplot()</code> 함수를 사용한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sns</span><span class="p">.</span><span class="nf">scatterplot</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">mpg</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="sh">'</span><span class="s">displ</span><span class="sh">'</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="sh">'</span><span class="s">hwy</span><span class="sh">'</span><span class="p">)</span> \ <span class="c1"># mpg 변수에 담긴 데이터의 x 값에 'displ' y 값에 'hwy'로 타나낸다.
</span>    <span class="p">.</span><span class="nf">set</span><span class="p">(</span><span class="n">xlim</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">6</span><span class="p">],</span> <span class="n">ylim</span> <span class="o">=</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">30</span><span class="p">])</span> <span class="c1"># x 값의 범위를 3 ~ 6으로 고정, y 값의 범위를 10 ~ 30으로 고정
</span>
<span class="c1"># 'hue' 파라미터를 사용하면 변수의 값들을 해당 값으로 구분해줄 수 있다.
</span><span class="n">sns</span><span class="p">.</span><span class="nf">scatterplot</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">mpg</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="sh">'</span><span class="s">displ</span><span class="sh">'</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="sh">'</span><span class="s">hwy</span><span class="sh">'</span><span class="p">,</span> <span class="n">hue</span> <span class="o">=</span> <span class="sh">'</span><span class="s">drv</span><span class="sh">'</span><span class="p">)</span> <span class="c1"># 'drv' 변수에 따라 색으로 구분
</span></code></pre></div></div>

<h3 id="72-막대그래프">7.2. 막대그래프</h3>

<p>성별과 소득처럼 집단 간 차이를 표현할 때 사용한다.</p>

<p><code class="language-plaintext highlighter-rouge">sns.barplot()</code> 함수를 사용한다</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 그룹화한 데이터를 만들어준다.
</span><span class="n">df_mpg</span> <span class="o">=</span> <span class="n">mpg</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">drv</span><span class="sh">'</span><span class="p">,</span> <span class="n">as_index</span> <span class="o">=</span> <span class="bp">False</span><span class="p">)</span> \ <span class="c1"># 'drv' 변수가 인덱스로 나타나지 않게 하기 위해 'as_index = False'를 파라미터로 넘겨준다
</span>            <span class="p">.</span><span class="nf">agg</span><span class="p">(</span><span class="n">mean_hwy</span> <span class="o">=</span> <span class="p">(</span><span class="sh">'</span><span class="s">hwy</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">mean</span><span class="sh">'</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="nf">barplot</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">df_mpg</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="sh">'</span><span class="s">drv</span><span class="sh">'</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="sh">'</span><span class="s">mean_hwy</span><span class="sh">'</span><span class="p">)</span> <span class="c1"># 말 안 해도 알겨
</span>
<span class="c1"># 막대 그래프를 정렬하고 싶다면 df_mpg 변수를 정렬해주면 된다.
</span><span class="n">df_mpg</span> <span class="o">=</span> <span class="n">df_mpg</span><span class="p">.</span><span class="nf">sort_values</span><span class="p">(</span><span class="sh">'</span><span class="s">mean_hwy</span><span class="sh">'</span><span class="p">,</span> <span class="n">ascending</span> <span class="o">=</span> <span class="bp">False</span><span class="p">)</span>
<span class="n">sns</span><span class="p">.</span><span class="nf">barplot</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">df_mpg</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="sh">'</span><span class="s">drv</span><span class="sh">'</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="sh">'</span><span class="s">mean_hwy</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="73-선-그래프">7.3. 선 그래프</h3>

<p>시계열 데이터(환율, 주가지수 등 경제지표처럼 시간에 따라 변하는 데이터)를 표현할 때 사용한다.</p>

<p><code class="language-plaintext highlighter-rouge">sns.lineplot()</code> 함수를 사용한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sns</span><span class="p">.</span><span class="nf">lineplot</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">economics</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="sh">'</span><span class="s">date</span><span class="sh">'</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="sh">'</span><span class="s">unemploy</span><span class="sh">'</span><span class="p">)</span>

<span class="n">economics</span><span class="p">.</span><span class="nf">info</span><span class="p">()</span> <span class="c1"># 변수 타입을 확인해보면 date가 object 타입으로 되어있어 그래프 표현 시 매끄럽게 표현이 되지 않는다.
</span><span class="n">economics</span><span class="p">[</span><span class="sh">'</span><span class="s">date2</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">to_datetime</span><span class="p">(</span><span class="n">economics</span><span class="p">[</span><span class="sh">'</span><span class="s">date</span><span class="sh">'</span><span class="p">])</span> <span class="c1"># pandas 패키지의 to_datetime() 함수를 사용하여 데이터 타입을 datetime으로 바꿔준 후 사용한다.
</span>
<span class="c1"># 연, 월, 일 추출
</span><span class="n">economics</span><span class="p">[</span><span class="sh">'</span><span class="s">date2</span><span class="sh">'</span><span class="p">].</span><span class="n">dt</span><span class="p">.</span><span class="n">year</span>
<span class="n">economics</span><span class="p">[</span><span class="sh">'</span><span class="s">date2</span><span class="sh">'</span><span class="p">].</span><span class="n">dt</span><span class="p">.</span><span class="n">month</span>
<span class="n">economics</span><span class="p">[</span><span class="sh">'</span><span class="s">date2</span><span class="sh">'</span><span class="p">].</span><span class="n">dt</span><span class="p">.</span><span class="n">day</span>
<span class="c1"># 'date' 변수는 안 됨. datetime 타입으로 변경한 'date2'만 가능하다.
# 'date' 변수에 사용 시 : ...AttributeError : Can only use .dt accessor with datetimelike values 에러가 발생
</span>
<span class="c1"># 그래프에 연도 별로 추출하기
</span><span class="n">economics</span><span class="p">[</span><span class="sh">'</span><span class="s">year</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">economics</span><span class="p">[</span><span class="sh">'</span><span class="s">date2</span><span class="sh">'</span><span class="p">].</span><span class="n">dt</span><span class="p">.</span><span class="n">year</span> <span class="c1"># 연도만 뽑은 데이터를 year 변수에 할당
</span><span class="n">sns</span><span class="p">.</span><span class="nf">lineplot</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">economics</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="sh">'</span><span class="s">year</span><span class="sh">'</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="sh">'</span><span class="s">unemploy</span><span class="sh">'</span><span class="p">)</span> <span class="c1"># 연도별로 선 그래프가 나타남
</span>
<span class="c1"># 신뢰 구간 제거
</span><span class="n">sns</span><span class="p">.</span><span class="nf">lineplot</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">economics</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="sh">'</span><span class="s">year</span><span class="sh">'</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="sh">'</span><span class="s">unemploy</span><span class="sh">'</span><span class="p">,</span> <span class="n">errorbar</span> <span class="o">=</span> <span class="bp">None</span><span class="p">)</span> <span class="c1"># errorbar = None으로 신뢰구간을 제거하고 나타낸다.
</span></code></pre></div></div>

<h3 id="74-상자-그림">7.4. 상자 그림</h3>

<p>분포를 알 수 있는 그래프로 평균만 볼 때보다 데이터 특징을 좀 더 자세히 볼 수 있다.</p>

<p>데이터 분석 그래프 중 가장 중요하다.</p>

<p><code class="language-plaintext highlighter-rouge">sns.boxplot()</code> 함수를 사용한다.</p>

<ul>
  <li>
    <p>상자의 가로 선분 : 중앙값</p>
  </li>
  <li>
    <p>상자의 아랫면 : 상위 25% 지점 (1분위 수)</p>
  </li>
  <li>
    <p>상재의 윗면 : 상위 75% 지점 (3분위 수)</p>
  </li>
  <li>
    <p>상자 밖 가로 선분 : 최대값과 최소값</p>
  </li>
  <li>
    <p>상자 밖 점 : 극단치</p>
  </li>
</ul>

<h4 id="741-극단치-구하는-법">7.4.1. 극단치 구하는 법</h4>

<ul>
  <li>
    <p>4분위 거리 (IQR) = 1분위 수 - 3분위 수</p>
  </li>
  <li>
    <p>1.5 IQR = IQR * 1.5</p>
  </li>
  <li>
    <p>아래 극단치 = 1분위 수 - 1.5 IQR 보다 작은 값</p>
  </li>
  <li>
    <p>위 극단치 = 3분위 수 + 1.5 IQR 보다 큰 값</p>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 값을 수동으로 정렬하기
</span><span class="n">sns</span><span class="p">.</span><span class="nf">boxplot</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">mpg</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="sh">'</span><span class="s">drv</span><span class="sh">'</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="sh">'</span><span class="s">hwy</span><span class="sh">'</span><span class="p">,</span> <span class="n">order</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">f</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">r</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">4</span><span class="sh">'</span><span class="p">])</span> <span class="c1"># order 파라미터를 이용해 그래프 순서를 정렬해준다.
</span>
<span class="c1"># 값에 따른 정렬 자동으로 하기
</span><span class="n">drv_order</span> <span class="o">=</span> <span class="n">mpg</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">drv</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">hwy</span><span class="sh">'</span><span class="p">].</span><span class="nf">median</span><span class="p">().</span><span class="nf">sort_values</span><span class="p">(</span><span class="n">ascending</span> <span class="o">=</span> <span class="bp">False</span><span class="p">)</span> <span class="c1"># 중앙값 별로 내림차순으로 정렬. 인덱스로 나타난다.
</span><span class="n">drv_order</span><span class="p">.</span><span class="n">index</span> <span class="c1"># 해당 변수의 인덱스를 출력 (이 값을 order 파라미터의 값으로 넣어주면 됨
</span>
<span class="n">sns</span><span class="p">.</span><span class="nf">boxplot</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">mpg</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="sh">'</span><span class="s">drv</span><span class="sh">'</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="sh">'</span><span class="s">hwy</span><span class="sh">'</span><span class="p">,</span> <span class="n">order</span> <span class="o">=</span> <span class="n">drv_order</span><span class="p">.</span><span class="n">index</span><span class="p">)</span> <span class="c1"># drv_order의 중앙값에 따라 내림차순으로 자동으로 정렬되어 나타난다.
</span></code></pre></div></div>

<h2 id="8-데이터-결합-파트-3-챕터-5">8. 데이터 결합 (파트 3 챕터 5)</h2>

<h3 id="81-열-추가">8.1. 열 추가</h3>

<p>데이터를 가로로 추가하는 것(열 추가)은 ‘merge’ 함수를 사용한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">test1</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">({</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">],</span> <span class="sh">'</span><span class="s">midterm</span><span class="sh">'</span> <span class="p">:</span> <span class="p">[</span><span class="mi">60</span><span class="p">,</span> <span class="mi">80</span><span class="p">,</span> <span class="mi">70</span><span class="p">,</span> <span class="mi">90</span><span class="p">,</span> <span class="mi">85</span><span class="p">]})</span>
<span class="n">test2</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">({</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">],</span> <span class="sh">'</span><span class="s">midterm</span><span class="sh">'</span> <span class="p">:</span> <span class="p">[</span><span class="mi">70</span><span class="p">,</span> <span class="mi">83</span><span class="p">,</span> <span class="mi">65</span><span class="p">,</span> <span class="mi">95</span><span class="p">,</span> <span class="mi">80</span><span class="p">]})</span>

<span class="n">total</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">merge</span><span class="p">(</span><span class="n">test1</span><span class="p">,</span> <span class="n">test2</span><span class="p">,</span> <span class="n">how</span> <span class="o">=</span> <span class="sh">'</span><span class="s">left</span><span class="sh">'</span><span class="p">,</span> <span class="n">on</span> <span class="o">=</span> <span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">)</span>

<span class="n">total</span>
</code></pre></div></div>

<p>how 파라미터에 결합하는 방향을 적는다 ‘left, right 등’ 첫 변수 데이터 테이블인 test1의 왼쪽 방향으로 병합이 되며 ‘on’ 파라미터로 넘긴 컬럼명을 기준으로 합쳐진다.</p>

<h3 id="82-행-추가">8.2. 행 추가</h3>

<p>데이터를 세로로 추가하는 것(행 추가)은 ‘concat’ 함수를 사용한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">group_a</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">({</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">],</span> <span class="sh">'</span><span class="s">test</span><span class="sh">'</span> <span class="p">:</span> <span class="p">[</span><span class="mi">60</span><span class="p">,</span> <span class="mi">80</span><span class="p">,</span> <span class="mi">70</span><span class="p">,</span> <span class="mi">90</span><span class="p">,</span> <span class="mi">85</span><span class="p">]})</span>
<span class="n">group_b</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">({</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span> <span class="p">:</span> <span class="p">[</span><span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">],</span> <span class="sh">'</span><span class="s">test</span><span class="sh">'</span> <span class="p">:</span> <span class="p">[</span><span class="mi">70</span><span class="p">,</span> <span class="mi">83</span><span class="p">,</span> <span class="mi">65</span><span class="p">,</span> <span class="mi">95</span><span class="p">,</span> <span class="mi">80</span><span class="p">]})</span>

<span class="n">group_all</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">concat</span><span class="p">([</span><span class="n">group_a</span><span class="p">,</span> <span class="n">group_b</span><span class="p">])</span>

<span class="n">group_all</span>
</code></pre></div></div>

<p>들어간 변수 순서에 따라 차례로 아래에 붙는다.</p>

<p>각 데이터프레임의 인덱스를 무시하고 새로 인덱스가 정의되길 원한다면 ‘ignore_index’ 파라미터 값을 True로 넘기면 된다.</p>

<p>사실 인덱스는 데이터 분석 시 사용하지 않으므로 굳이 재정의할 필요는 없다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">group_all</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">concat</span><span class="p">([</span><span class="n">group_a</span><span class="p">,</span> <span class="n">group_b</span><span class="p">],</span> <span class="n">ignore_index</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="9-데이터-정제">9. 데이터 정제</h2>

<h3 id="91-결측치--누락-값">9.1. 결측치 : 누락 값</h3>

<p>결측치가 있다면 제거하거나 채워넣는 방법이 있다.</p>

<h4 id="911-결측치-제거">9.1.1. 결측치 제거</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">np</span><span class="p">.</span><span class="n">nan</span> <span class="c1"># 결측치
</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">({</span><span class="sh">'</span><span class="s">sex</span><span class="sh">'</span> <span class="n">L</span> <span class="p">[</span><span class="sh">'</span><span class="s">M</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">F</span><span class="sh">'</span><span class="p">,</span> <span class="n">np</span><span class="p">.</span><span class="n">nan</span><span class="p">,</span> <span class="sh">'</span><span class="s">M</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">F</span><span class="sh">'</span><span class="p">],</span> <span class="sh">'</span><span class="s">score</span><span class="sh">'</span> <span class="p">:</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">np</span><span class="p">.</span><span class="n">nan</span><span class="p">]})</span>

<span class="n">df</span>

<span class="n">pd</span><span class="p">.</span><span class="nf">isna</span><span class="p">(</span><span class="n">df</span><span class="p">)</span> <span class="c1"># 결측치 확인 : .isna() 함수를 사용하면 결측치인 경우 'True', 아닌 경우 'False'로 결과가 나온다.
</span><span class="n">pd</span><span class="p">.</span><span class="nf">isna</span><span class="p">(</span><span class="n">df</span><span class="p">).</span><span class="nf">sum</span><span class="p">()</span> <span class="c1"># 결측치 빈도 확인 : .sum() 함수를 사용하면 어떤 변수에 몇 개의 결측치가 있는지 나타난다.
</span></code></pre></div></div>

<p>결측치가 있는 행을 제거하려면 ‘.dropna()’ 함수를 사용하면 된다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_nomiss</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="nf">dropna</span><span class="p">(</span><span class="n">subset</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">score</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">sex</span><span class="sh">'</span><span class="p">])</span> <span class="c1"># 해당 변수에서 결측치 제거
</span><span class="n">df_nomiss2</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="nf">dropna</span><span class="p">()</span> <span class="c1"># 모든 행에 대해 결측치 제거
</span></code></pre></div></div>

<p>‘subset’ 파라미터에 결측치를 제거하고 싶은 변수를 넣어주면 해당 열에 결측치가 존재하면 그 행을 제거한다.</p>

<p>모든 변수에 대해 결측치를 제거하게 되면 분석에 사용할 행까지 제거할 가능성이 높으므로 보통 사용하지 않는다.</p>

<p>날려도 크게 상관 없다면 (데이터가 많음) 사용하기도 한다.</p>

<p>pandas에서 결측치를 제거하지 않고 연산을 진행하면 자동으로 결측치를 제거하고 연산한다. (mean, su, agg, …)</p>

<h4 id="912-결측치-대체">9.1.2. 결측치 대체</h4>

<p>결측치가 많아 데이터 손실이 많은 경우 사용한다</p>

<p>대표값 (평균, 최빈값) 등으로 대체 하거나 다른 변수들에 따른 추정값으로 대체하는 법이 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exam</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">exam.csv</span><span class="sh">'</span><span class="p">)</span> <span class="c1"># 데이터 불러오기
</span><span class="n">exam</span><span class="p">.</span><span class="n">loc</span><span class="p">[[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">14</span><span class="p">],</span> <span class="p">[</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">]]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">nan</span> <span class="c1"># 첫 매개변수는 선택할 인덱스, 두 번째는 해당 열이 된다. 그곳에 결측치 할당.
</span><span class="n">exam</span>

<span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">math</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">exam</span><span class="p">[</span><span class="sh">'</span><span class="s">math].fillna(exam[</span><span class="sh">'</span><span class="n">math</span><span class="sh">'</span><span class="s">].mean()) # 결측치를 평균값으로 대체하기
</span></code></pre></div></div>

<p>‘.fillna()’ 함수를 이용하여 해당 변수의 결측치에 일괄적으로 값을 할당할 수 있다.</p>

<h3 id="92-이상치">9.2. 이상치</h3>

<p>이상치는 정상 범주에서 벗어난 값이다.</p>

<table>
  <thead>
    <tr>
      <th>종류</th>
      <th>예</th>
      <th>해결방법</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>존재할 수 없는 값</td>
      <td>성별 변수에 3</td>
      <td>결측처리</td>
    </tr>
    <tr>
      <td>극단적인 값</td>
      <td>몸무게 변수에 200</td>
      <td>정상범위 기준 정해서 결측 처리</td>
    </tr>
  </tbody>
</table>

<p>‘.value_counts()’ 함수를 이용하여 변수에 존재하는 값 별로 카운트 할 수 있으며 이상치 확인이 쉬워진다.</p>

<p>추가로 ‘.sort_index()’ 함수로 인덱스 별로 정렬을하면 보기가 더 편하다.</p>

<h4 id="921-존재할-수-없는-값">9.2.1. 존재할 수 없는 값</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">outlier</span><span class="p">[</span><span class="sh">'</span><span class="s">score</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">where</span><span class="p">(</span><span class="n">outlier</span><span class="p">[</span><span class="sh">'</span><span class="s">score</span><span class="sh">'</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">5</span><span class="p">,</span> <span class="n">np</span><span class="p">.</span><span class="n">nan</span><span class="p">,</span> <span class="n">outlier</span><span class="p">[</span><span class="sh">'</span><span class="s">score</span><span class="sh">'</span><span class="p">])</span>
</code></pre></div></div>

<p>위 코드는 ‘outlier’ 데이터 테이블의 ‘score’ 점수가 5 이상인 것이 있다면 NaN으로 처리하고 아니라면 원래 값 그대로 가져게 한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">outlier</span><span class="p">.</span><span class="nf">dropna</span><span class="p">(</span><span class="n">subset</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">sex</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">score</span><span class="sh">'</span><span class="p">])</span> \ <span class="c1"># 결측치 제거
</span>  <span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">sex</span><span class="sh">'</span><span class="p">)</span> \ <span class="c1"># sex 별 분리
</span>  <span class="p">.</span><span class="nf">agg</span><span class="p">(</span><span class="n">mean</span><span class="o">-</span><span class="n">score</span> <span class="o">=</span> <span class="p">(</span><span class="sh">'</span><span class="s">score</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">mean</span><span class="sh">'</span><span class="p">))</span> <span class="c1"># score 평균 구하기
</span></code></pre></div></div>

<p>그 후 위처럼 결측치를 제거하고 성별 그룹을 묶어서 평균을 구한다.</p>

<h4 id="922-극단적인-값">9.2.2. 극단적인 값</h4>

<p>판단 기준은 논리적 판단 (예 : 성인 몸무게는 40~150kg 사이), 통계적 판단(boxplot에서 극단치인 값)이 있다.</p>

<p>극단치를 구하는 법은 상자그림에서 1사분위수와 3사분위수를 이용한 iqr로 판단한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pct25</span> <span class="o">=</span> <span class="n">mpg</span><span class="p">[</span><span class="sh">'</span><span class="s">hwy</span><span class="sh">'</span><span class="p">].</span><span class="nf">quantile</span><span class="p">(.</span><span class="mi">25</span><span class="p">)</span> <span class="c1"># 1사분위수
</span><span class="n">pct75</span> <span class="o">=</span> <span class="n">mpg</span><span class="p">[</span><span class="sh">'</span><span class="s">hwy</span><span class="sh">'</span><span class="p">].</span><span class="nf">quantile</span><span class="p">(.</span><span class="mi">75</span><span class="p">)</span> <span class="c1"># 4사분위수
</span><span class="n">iqr</span> <span class="o">=</span> <span class="n">pct75</span> <span class="o">-</span> <span class="n">pct</span> <span class="mi">25</span> <span class="c1"># IQR
</span>
<span class="n">pct25</span> <span class="o">-</span> <span class="mf">1.5</span> <span class="o">*</span> <span class="n">iqr</span> <span class="c1"># 기준값 하한
</span><span class="n">pct75</span> <span class="o">+</span> <span class="mf">1.5</span> <span class="o">*</span> <span class="n">iqr</span> <span class="c1"># 기준값 상한
</span></code></pre></div></div>

<p>해당 하한과 상한을 벗어난 값은 극단치가 된다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 하한 4.5, 상한 40.5
</span><span class="n">mpg</span>\<span class="p">[</span><span class="sh">'</span><span class="s">hwy</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">where</span>\<span class="p">(</span>\<span class="p">(</span><span class="n">mpg</span>\<span class="p">[</span><span class="sh">'</span><span class="s">hwy</span><span class="sh">'</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mf">4.5</span> <span class="o">|</span> \<span class="p">(</span><span class="n">mpg</span>\<span class="p">[</span><span class="sh">'</span><span class="s">hwy</span><span class="sh">'</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">40.5</span><span class="p">),</span> <span class="n">np</span><span class="p">.</span><span class="n">nan</span><span class="p">,</span> <span class="n">mpg</span>\<span class="p">[</span><span class="sh">'</span><span class="s">hwy</span><span class="sh">'</span><span class="p">])</span> <span class="c1"># 극단치 결측처리
</span>
<span class="n">mpg</span><span class="p">[</span><span class="sh">'</span><span class="s">hwy</span><span class="sh">'</span><span class="p">].</span><span class="nf">isna</span><span class="p">().</span><span class="nf">sum</span><span class="p">()</span> <span class="c1"># 결측치 빈도확인
</span></code></pre></div></div>

<p>위와 같이 상한, 하한을 이용하여 결측치를 제거한 뒤 ‘2.1. 존재할 수 없는 값’과 마찬가지로 분석하면 된다.</p>

<h2 id="10-chatgpt-40">10. ChatGPT 4.0</h2>

<h3 id="101-advanced-data-analysis">10.1. Advanced Data Analysis</h3>

<p>ChatGPT 4.0 부터 파일 업로드, 다운로드 기능이 있기 때문에 데이터 파일을 업로드 하고 필요한 분석을 요청하면 실행된 코드와 결과물을 보여준다.</p>

<p>즉, 위에 말한 거 몰라도 일반인들도 다 할 수 있음.</p>

<p>하지만 할루시네이션<sup id="fnref:hal"><a href="#fn:hal" class="footnote" rel="footnote" role="doc-noteref">1</a></sup>은 항상 조심해야한다.</p>

<p>분석 목표만 요청한다면 할루시네이션 위험이 높아진다. 따라서 단계별로 작업을 하고 오류를 점검하는 게 좋다. 또 프롬프트에 오류 점검해달라고 추가 요청을 한다.</p>

<p>이점 유의해서 AI 사용하도록</p>

<h3 id="102-browsing">10.2. Browsing</h3>

<p>ChatGPT 4.0 부터 최신 정보를 검색하여 답변을 줄 수 있다.</p>

<h2 id="11-communities">11. Communities</h2>

<p>아래는 데이터 분석 네트워킹 커뮤니티이다.</p>

<p><a href="https://fb.com/groups/datacommunity">데이터 분석 커뮤니티</a></p>

<p><a href="https://gpters.org">지피터스</a></p>

<hr />
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:hal">
      <p>데이터에 오류 가능성을 염두해두지 않거나, 없는 데이터를 그럴듯하게 생성해서 분석 <a href="#fnref:hal" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Bonazoey</name></author><category term="Python" /><category term="Python" /><category term="파이썬" /><summary type="html"><![CDATA[파이썬 툴은 Anaconda를 설치하였고, Jupyter lab이용한다.]]></summary></entry><entry><title type="html">[Basic] JSON</title><link href="/jekyll-theme-yat/basic/2024/04/12/json.html" rel="alternate" type="text/html" title="[Basic] JSON" /><published>2024-04-12T00:00:00+00:00</published><updated>2024-04-12T00:00:00+00:00</updated><id>/jekyll-theme-yat/basic/2024/04/12/json</id><content type="html" xml:base="/jekyll-theme-yat/basic/2024/04/12/json.html"><![CDATA[<h2 id="json">JSON</h2>

<blockquote>
  <p><strong>속성-값 쌍(attribute–value pairs)</strong>, 배열 자료형(array data types) 또는 기타 모든 시리얼화 가능한 값(serializable value) 또는 <strong>키-값</strong> 쌍으로 이루어진 데이터 오브젝트를 전달하기 위해 인간이 읽을 수 있는 텍스트를 사용하는 개방형 표준 포맷이다.</p>
</blockquote>

<p>다시 말해, 데이터를 전달하기 위한 텍스트로 이루어진 배열형 포맷이다.</p>

<p>XML과 같이 데이터 전달을 위해 사용되지만, 구문이 좀 더 짧고, 배열을 사용할 수 있다는 점, 그리고 파싱 속도가 더 빠르다.</p>

<p>하지만 데이터 무결성을 사용자가 직접 검증해야되기 때문에 검증이 필요한 곳에서는 XML이 많이 사용되고 있다.</p>

<p><code class="language-plaintext highlighter-rouge">JSON</code>은 비동기 통신인 <code class="language-plaintext highlighter-rouge">AJXA</code>를 위해 XML을 대체하는 주요 데이터 포맷이다. <code class="language-plaintext highlighter-rouge">Javascript</code> 언어에서 파생되어 이 언어 형식을 따르지만 독립적으로 존재해 다른 프로그래밍 언어에서 쉽게 사용할 수 있다.</p>

<h2 id="1-자료형과-문법">1. 자료형과 문법</h2>

<p>JSON의 기본 자료형은 다음과 같다.</p>

<ul>
  <li>
    <p>수 (Number)</p>
  </li>
  <li>
    <p>문자열 (String)</p>
  </li>
  <li>
    <p>참/거짓 (Boolean)</p>
  </li>
  <li>
    <p>배열 (Array)</p>
  </li>
  <li>
    <p>객체 (Object)</p>
  </li>
  <li>
    <p>null</p>
  </li>
</ul>

<h3 id="1-1-수">1-1. 수</h3>

<p>수는 정수, 실수로 포함하며 C나 자바에서의 8진수, 16진수 표현 방법은 지원되지 않는다.</p>

<ul>
  <li>정수</li>
</ul>

<pre><code class="language-txt">74
1974
750
-114
-273
</code></pre>

<p>*실수</p>

<pre><code class="language-txt">3.14
-2.718
</code></pre>

<h3 id="1-2-문자열">1-2. 문자열</h3>

<p>따옴표로 묶어야하며, 역슬래시는 제어문자를 표현하기 위해 사용된다.</p>

<pre><code class="language-txt">\b      : 백스페이스
\f      : 폼 피드
\n      : 개행
\r      : 캐리지 리턴
\t      : 탭
\"      : 따옴표
\/      : 슬래시
\\      : 역슬래시
\uHHHH  : 16진수 네자리로 되어있는 유니코드 문자
</code></pre>

<h3 id="1-3-배열">1-3. 배열</h3>

<p>배열은 대괄호(<code class="language-plaintext highlighter-rouge">[]</code>)로 나타낸다, 각 요소는 쉼표로 구분한다.</p>

<p>JSON 메세지의 단위는 배열이나 객체이다. 그래서 이때부터 JSON 메시지가 될 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="p">[</span><span class="mi">30</span><span class="p">,</span> <span class="dl">"</span><span class="s2">마흔</span><span class="dl">"</span><span class="p">]]</span>
</code></pre></div></div>

<p>배열 안에 객체가 들어갈 수도 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="dl">"</span><span class="s2">dog</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>
  <span class="p">{</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">식빵</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">family</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">웰시코기</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">age</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="dl">"</span><span class="s2">weight</span><span class="dl">"</span><span class="p">:</span> <span class="mf">2.14</span><span class="p">},</span>
  <span class="p">{</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">콩콩</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">family</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">포메라니안</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">age</span><span class="dl">"</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="dl">"</span><span class="s2">weight</span><span class="dl">"</span><span class="p">:</span> <span class="mf">2.5</span><span class="p">},</span>
  <span class="p">{</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">젤리</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">family</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">푸들</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">age</span><span class="dl">"</span><span class="p">:</span> <span class="mi">7</span><span class="p">,</span> <span class="dl">"</span><span class="s2">weight</span><span class="dl">"</span><span class="p">:</span> <span class="mf">3.1</span><span class="p">}</span>
<span class="p">]</span>
</code></pre></div></div>

<h3 id="1-4-객체">1-4. 객체</h3>

<p>이름/값 쌍 집합으로 중괄호 (<code class="language-plaintext highlighter-rouge">{}</code>)를 사용한다. 각 쌍들은 쉼표로 구분된다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="dl">"</span><span class="s2">name2</span><span class="dl">"</span><span class="p">:</span> <span class="mi">50</span><span class="p">,</span> <span class="dl">"</span><span class="s2">name3</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">값3</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">name1</span><span class="dl">"</span><span class="p">:</span> <span class="kc">true</span><span class="p">}</span>
</code></pre></div></div>

<h3 id="1-5-예제">1-5. 예제</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">이름</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">홍길동</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">나이</span><span class="dl">"</span><span class="p">:</span> <span class="mi">55</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">성별</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">남</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">주소</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">서울특별시 양천구 목동</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">특기</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">검술</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">코딩</span><span class="dl">"</span><span class="p">],</span>
  <span class="dl">"</span><span class="s2">가족관계</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span><span class="dl">"</span><span class="s2">#</span><span class="dl">"</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="dl">"</span><span class="s2">아버지</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">홍판서</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">어머니</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">춘섬</span><span class="dl">"</span><span class="p">},</span>
  <span class="dl">"</span><span class="s2">회사</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">경기 수원시 팔달구 우만동</span><span class="dl">"</span>
 <span class="p">}</span>
</code></pre></div></div>

<h2 id="2-json-스키마">2. JSON 스키마</h2>

<p>적법한 JSON 데이터의 형식을 기술한 문서를 <code class="language-plaintext highlighter-rouge">JSON 스키마</code>라고 한다.</p>

<p>JSON 스키마는 다음과 같은 검증 과정을 거친다.</p>

<ol>
  <li>
    <p>데이터의 타입이 정확한가</p>
  </li>
  <li>
    <p>필수로 받아와야하는 데이터가 포함되어 있나</p>
  </li>
  <li>
    <p>데이터가 원하는 범위 안에 있나</p>
  </li>
</ol>

<p>위와 같은 기준을 모두 <code class="language-plaintext highlighter-rouge">키워드</code>를 이용해 직접 명시할 수 있다.</p>

<h3 id="2-1-검증-키워드">2-1. 검증 키워드</h3>

<p>JSON 스키마에선은 검증 기준을 명시하기 위해 여러 키워드를 사용할 수 있는데, 이러한 키워드를 사용해 데이터에 여러 가지 조건을 걸어줄 수 있다.</p>

<p>아래는 대표적인 키워드이다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">검증 키워드</th>
      <th style="text-align: left">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">type</td>
      <td style="text-align: left">유효한 데이터의 타입을 명시함.</td>
    </tr>
    <tr>
      <td style="text-align: center">properties</td>
      <td style="text-align: left">유효한 데이터 이름과 값의 쌍들을 명시함.</td>
    </tr>
    <tr>
      <td style="text-align: center">required</td>
      <td style="text-align: left">명시한 배열의 모든 요소를 프로퍼티로 가지고 있어야만 유효함.</td>
    </tr>
    <tr>
      <td style="text-align: center">minimum</td>
      <td style="text-align: left">최솟값 이상의 숫자만 유효함.</td>
    </tr>
    <tr>
      <td style="text-align: center">maximum</td>
      <td style="text-align: left">최댓값 이하의 숫자만 유효함.</td>
    </tr>
    <tr>
      <td style="text-align: center">exclusiveMinimum</td>
      <td style="text-align: left">boolean 값으로 최솟값이 포함될지 여부를 정함. 기본값은 false</td>
    </tr>
    <tr>
      <td style="text-align: center">exclusiveMaximum</td>
      <td style="text-align: left">boolean 값으로 최댓값이 포함될지 여부를 정함. 기본값은 false</td>
    </tr>
    <tr>
      <td style="text-align: center">multipleOf</td>
      <td style="text-align: left">명시한 숫자의 배수만 유효함.</td>
    </tr>
    <tr>
      <td style="text-align: center">maxLength</td>
      <td style="text-align: left">명시한 최대 길이 이하의 문자열만 유효함.</td>
    </tr>
    <tr>
      <td style="text-align: center">minLength</td>
      <td style="text-align: left">명시한 최소 길이 이상의 문자열만 유효함.</td>
    </tr>
    <tr>
      <td style="text-align: center">pattern</td>
      <td style="text-align: left">명시한 정규 표현식에 해당하는 문자열만 유효함.</td>
    </tr>
  </tbody>
</table>

<p>스키마의 정보를 나타내는 <code class="language-plaintext highlighter-rouge">메타 데이터 키워드</code>는 아래와 같다.</p>

<ol>
  <li>
    <p>title</p>
  </li>
  <li>
    <p>description</p>
  </li>
  <li>
    <p>default</p>
  </li>
</ol>

<p>아래는 예제이다</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">title</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">강아지 스키마</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">description</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">강아지 통해 검증해보려 한다..</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">object</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">properties</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
    <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span><span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">string</span><span class="dl">"</span><span class="p">},</span>
    <span class="dl">"</span><span class="s2">family</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span><span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">string</span><span class="dl">"</span><span class="p">},</span>
    <span class="dl">"</span><span class="s2">age</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span><span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">integer</span><span class="dl">"</span><span class="p">},</span>
    <span class="dl">"</span><span class="s2">weight</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span><span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">number</span><span class="dl">"</span><span class="p">},</span>
    <span class="dl">"</span><span class="s2">owner</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
      <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">object</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">properties</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
        <span class="dl">"</span><span class="s2">ownerName</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span><span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">string</span><span class="dl">"</span><span class="p">},</span>
        <span class="dl">"</span><span class="s2">phone</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span><span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">string</span><span class="dl">"</span><span class="p">}</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>아래는 문자열 <code class="language-plaintext highlighter-rouge">정규 표현식 검증</code> 시 주로 사용하는 패턴이다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">패턴 문자</th>
      <th style="text-align: left">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">^a</td>
      <td style="text-align: left">단어의 맨 앞에 위치한 패턴만을 검색함. (ex : ‘a’로 시작하는 단어의 ‘a’만을 검색함.)</td>
    </tr>
    <tr>
      <td style="text-align: center">a$</td>
      <td style="text-align: left">단어의 맨 뒤에 위치한 패턴만을 검색함. (ex : ‘a’로 끝나는 단어의 ‘a’만을 검색함.)</td>
    </tr>
    <tr>
      <td style="text-align: center">a(b)c</td>
      <td style="text-align: left">전체 패턴을 검색한 후에 괄호 안에 명시된 문자열을 저장함. (ex : ‘abc’를 검색한 후에 b를 저장함.)</td>
    </tr>
    <tr>
      <td style="text-align: center">[abc]</td>
      <td style="text-align: left">대괄호([]) 안에 명시된 문자를 검색함. (ex : ‘abc’를 검색함.)</td>
    </tr>
    <tr>
      <td style="text-align: center">[a-z]</td>
      <td style="text-align: left">대괄호([]) 안에 명시된 범위의 문자를 검색함. (ex : a부터 z까지의 문자를 검색함.)</td>
    </tr>
    <tr>
      <td style="text-align: center">[^abc]</td>
      <td style="text-align: left">대괄호([]) 안에 명시된 문자 이외의 문자를 검색함. (ex : ‘abc’를 제외한 문자를 검색함.)</td>
    </tr>
    <tr>
      <td style="text-align: center">[^a-z]</td>
      <td style="text-align: left">대괄호([]) 안에 명시된 범위의 문자를 제외한 문자를 검색함. (ex : a부터 z까지의 문자를 제외한 문자를 검색함.)</td>
    </tr>
    <tr>
      <td style="text-align: center">n+</td>
      <td style="text-align: left">앞의 문자가 1번 이상 나타날 경우를 검색함. {1, }과 같음.</td>
    </tr>
    <tr>
      <td style="text-align: center">n*</td>
      <td style="text-align: left">앞의 문자가 0번 이상 나타날 경우를 검색함. {0, }와 같음.</td>
    </tr>
    <tr>
      <td style="text-align: center">n?</td>
      <td style="text-align: left">앞의 문자가 0번 또는 1번만 나타날 경우를 검색함. {0,1}과 같음.</td>
    </tr>
    <tr>
      <td style="text-align: center">{n}</td>
      <td style="text-align: left">앞의 문자가 정확히 n번 나타날 경우를 검색함. n은 반드시 양의 정수이어야만 함.</td>
    </tr>
    <tr>
      <td style="text-align: center">{m,n}</td>
      <td style="text-align: left">앞의 문자가 최소 m번이상 최대 n번이하로 나타날 경우를 검색함. m과 n은 반드시 양의 정수이어야만 함.</td>
    </tr>
  </tbody>
</table>

<h4 id="2-11-객체-검증">2-1.1. 객체 검증</h4>

<p>객체의 <code class="language-plaintext highlighter-rouge">프로퍼티(property)</code>는 데이터 이름과 값의 쌍으로 구성된다.</p>

<p><code class="language-plaintext highlighter-rouge">properties</code> 키워드를 사용하여 해당 객체가 가지는 프로퍼티가 유효한지를 검사할 수 있다.</p>

<p><code class="language-plaintext highlighter-rouge">required</code> 키워드를 사용하면 해당 객체가 반드시 가지고 있어야 할 필수 프로퍼티를 명시할 수 있다,</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">object</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">properties</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
    <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span><span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">string</span><span class="dl">"</span><span class="p">},</span>
    <span class="dl">"</span><span class="s2">family</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span><span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">string</span><span class="dl">"</span><span class="p">},</span>
    <span class="dl">"</span><span class="s2">age</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span><span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">integer</span><span class="dl">"</span><span class="p">},</span>
    <span class="dl">"</span><span class="s2">weight</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span><span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">number</span><span class="dl">"</span><span class="p">}</span>
  <span class="p">},</span>
  <span class="dl">"</span><span class="s2">required</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">family</span><span class="dl">"</span><span class="p">]</span>
<span class="p">}</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">minProperties</code>와 <code class="language-plaintext highlighter-rouge">maxProperties</code> 키워드를 사용하여 해당 객체가 가질 수 있는 프로퍼티 개수의 최솟값과 최댓값을 명시할 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">object</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">minProperties</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">maxProperties</span><span class="dl">"</span><span class="p">:</span> <span class="mi">2</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="2-1-2-배열-검증">2-1-2. 배열 검증</h4>

<p>배열은 <code class="language-plaintext highlighter-rouge">items</code> 키워드를 사용해 저장된 배열 요소에 대한 검증을 수행할 수 있다.</p>

<p>아래는 해당 데이터가 배열이면서, 각 배열 요소가 모두 정수인지 검사하는 예제이다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">array</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">items</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
    <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">integer</span><span class="dl">"</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>배열의 각 요소를 서로 다른 JSON 스키마로 검사하고 싶다면, items 키워드와 함께 배열로 스키마를 명시하면 된다.</p>

<pre><code class="language-javacript">{
  "type": "array",
  "items": [
    {
      "type": "string",
      "maxLength": 5
    },
    {
      "type": "string"
    },
    {
      "type": "string"
    }
  ],
  "additionalItems": false
  "uniqueItems": false
}
</code></pre>

<p>위 예제는 첫 요소의 길이가 5를 넘지 않는 문자열이고, 두 세 번째 요소가 문자열이면 검증이 된다.</p>

<p>여기에 추가적인 요소를 갖고있다면 마찬가지로 검증이 된다.</p>

<p>하지만 <code class="language-plaintext highlighter-rouge">additionalItems</code> 키워드 값을 false로 명시하면 추가 요소 배열은 검증이 되지 않는다. 기본값은 true이다.</p>

<p><code class="language-plaintext highlighter-rouge">uniqueItems</code> 키워드는 배열 요소 중복값 허용을 명시할 수 있다. 기본값은 false이다.</p>

<h4 id="2-1-3-열거형-검증">2-1-3. 열거형 검증</h4>

<p><code class="language-plaintext highlighter-rouge">enum 키워드</code>를 사용하여 해당 데이터가 명시된 배열에 속한 값인지를 검사할 수 있다.</p>

<p>유효한 enum 값들은 배열을 사용하여 명시하며, 중복 값을 가질 수는 없다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">string</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">enum</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">웰시코기</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">포메라니안</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">푸들</span><span class="dl">"</span><span class="p">]</span>
<span class="p">}</span>
</code></pre></div></div>

<p>enum 안에 있는 값 외에는 검증이 되지 않는다.</p>

<h3 id="2-2-스키마-결합">2-2. 스키마 결합</h3>

<p>다음 키워드를 사용하여 JSON 스키마를 결합할 수 있다.</p>

<ol>
  <li>
    <p>allOf : 배열에 나열된 스키마에 대한 검증을 모두 통과해야 한다.</p>
  </li>
  <li>
    <p>anyOf : 배열에 나열된 스키마 중 하나 이상 검증을 통과해야 한다.</p>
  </li>
  <li>
    <p>oneOf : 배열에 나열된 스키마 중 오직 하나만 검증을 통과해야 한다.</p>
  </li>
  <li>
    <p>not : 명시된 스키마를 만족하지 않는 데이터만 검증을 통과한다.</p>
  </li>
</ol>

<p>아래는 예제이다.</p>

<pre><code class="language-javacript">{
  "allOf": [
    {"minLength": 3},
    {"maxLength": 5}
  ]
}
</code></pre>

<pre><code class="language-javacript">{
  "anyOf": [
    {"type": "string"},
    {"type": "number"}
  ]
}
</code></pre>

<pre><code class="language-javacript">{
  "oneOf": [
    { "type": "number", "multipleOf": 3 },
    { "type": "number", "multipleOf": 4 }
  ]
}
</code></pre>

<pre><code class="language-javacript">{
  "not": {
    "type": "string"
  }
}
</code></pre>

<h2 id="3-javascript">3. Javascript</h2>

<p>JSON은 자바스크립트의 객체 표기법을 제한해 만든 텍스트 기반 데이터 교환 표준이다.</p>

<p>따라서 JSON 데이터는 자바스크립트가 자주 사용되는 웹 환경에서 사용하는 것이 유리하다.</p>

<p>Js는 JSON 데이터를 처리하기 위한 다음과 같은 메소드를 제공한다.</p>

<ol>
  <li>
    <p>JSON.stringify()</p>
  </li>
  <li>
    <p>JSON.parse()</p>
  </li>
  <li>
    <p>toJSON()</p>
  </li>
</ol>

<h3 id="3-1-jsonstringify">3-1. JSON.stringify()</h3>

<p>인수로 전달받은 자바스크립트 객체를 문자열로 변환하여 반환한다.</p>

<p>반환값은 <code class="language-plaintext highlighter-rouge">UTF-16</code>으로 인코딩된 JSON 형식의 문자열이다.</p>

<p>아래는 예제이다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">dog</span> <span class="o">=</span> <span class="p">{</span><span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">식빵</span><span class="dl">"</span><span class="p">,</span> <span class="na">family</span><span class="p">:</span> <span class="dl">"</span><span class="s2">웰시코기</span><span class="dl">"</span><span class="p">,</span> <span class="na">age</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="na">weight</span><span class="p">:</span> <span class="mf">2.14</span><span class="p">};</span> <span class="c1">// 자바스크립트 객체</span>

<span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">dog</span><span class="p">);</span> <span class="c1">// 자바스크립트 객체를 문자열로 변환함.</span>

<span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">json</span><span class="dl">"</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">data</span><span class="p">;</span>
</code></pre></div></div>

<p>출력 결과이다.</p>

<pre><code class="language-txt">{"name":"식빵","family":"웰시코기","age":1,"weight":2.14}
</code></pre>

<h3 id="3-2-jsonparse">3-2. JSON.parse()</h3>

<p>JSON.stringify() 메소드와는 반대로 인수로 전달받은 문자열을 자바스크립트 객체로 변환하여 반환한다.</p>

<p>이때 전달되는 문자열은 JSON 형식의 문자열이어야 한다.</p>

<p>아래는 예제이다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">{"name": "식빵", "family": "웰시코기", "age": 1, "weight": 2.14}</span><span class="dl">'</span><span class="p">;</span> <span class="c1">// JSON 형식의 문자열</span>

<span class="kd">var</span> <span class="nx">dog</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span> <span class="c1">// JSON 형식의 문자열을 자바스크립트 객체로 변환함.</span>

<span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">json</span><span class="dl">"</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">dog</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">&lt;br&gt;</span><span class="dl">"</span><span class="p">;</span>

<span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">json</span><span class="dl">"</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">+=</span> <span class="nx">dog</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">, </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">dog</span><span class="p">.</span><span class="nx">family</span><span class="p">;</span>
</code></pre></div></div>

<p>출력 결과이다.</p>

<pre><code class="language-txt">[object Object]
식빵, 웰시코기
</code></pre>

<h3 id="3-3-tojson">3-3. toJSON()</h3>

<p>자바스크립트의 toJSON() 메소드는 자바스크립트의 Date 객체의 데이터를 JSON 형식의 문자열로 변환하여 반환한다.</p>

<p>따라서 이 메소드는 Date.prototype 객체에서만 사용할 수 있다.</p>

<p>아래는 예제이다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">date</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="p">();</span>   <span class="c1">// 자바스크립트 Date 객체</span>

<span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="nx">date</span><span class="p">.</span><span class="nf">toJSON</span><span class="p">();</span> <span class="c1">// Date 객체를 JSON 형식의 문자열로 변환함.</span>

<span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">json</span><span class="dl">"</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">date</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">&lt;br&gt;</span><span class="dl">"</span><span class="p">;</span>

<span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">json</span><span class="dl">"</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">+=</span> <span class="nx">str</span><span class="p">;</span>
</code></pre></div></div>

<p>출력 결과이다.</p>

<pre><code class="language-txt">Fri Apr 12 2024 10:15:58 GMT+0900 (한국 표준시)
2024-04-12T01:15:58.665Z
</code></pre>

<h2 id="4-php">4. PHP</h2>

<p>PHP는 서버 측에서 실행되는 스크립트 언어이다. 개발자가 동적으로 웹 페이지를 쉽고 빠르게 만들 수 있도록 도와준다.</p>

<p>이때 서버로부터 읽어 들이는 데이터로 JSON 데이터가 많이 사용된다.</p>

<p>PHP는 다음과 같은 메소드를 제공한다.</p>

<ol>
  <li>
    <p>json_encode()</p>
  </li>
  <li>
    <p>json_decode()</p>
  </li>
</ol>

<h3 id="4-1-json_encode">4-1. json_encode()</h3>

<p>전달받은 값을 JSON 형식의 문자열로 변환해 반환한다.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">string</span> <span class="nb">json_encode</span><span class="p">(</span><span class="n">mixed</span> <span class="nv">$value</span><span class="p">)</span>
</code></pre></div></div>

<p>$value에는 변환할 값을 전달하며, 이 값의 타입은 resource 타입을 제외한 PHP의 모든 타입이 올 수 있다.</p>

<p>이 함수는 UTF-8로 인코딩된 값을 인수로 전달해야만 정상적으로 동작한다.</p>

<p>아래는 예제이다</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$value</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">'apple'</span><span class="o">=&gt;</span><span class="s1">'Fruits'</span><span class="p">,</span> <span class="s1">'1'</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span> <span class="s1">'참'</span><span class="o">=&gt;</span><span class="kc">true</span><span class="p">);</span> <span class="c1">// PHP 배열</span>

<span class="k">echo</span> <span class="nb">json_encode</span><span class="p">(</span><span class="nv">$value</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="4-2-json_decode">4-2. json_decode()</h3>

<p>전달받은 JSON 형식의 문자열을 PHP 변수로 변환한다.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mixed</span> <span class="nb">json_decode</span><span class="p">(</span><span class="n">string</span> <span class="nv">$json</span><span class="p">)</span>
</code></pre></div></div>

<p>$json에는 변환할 문자열을 전달한다.</p>

<p>이때 해당 문자열은 반드시 유효한 JSON 형식의 문자열이어야 한다.</p>

<p>만약 JSON 형식에 맞지 않는 문자열을 전달하면, json_decode() 함수는 null 값을 반환한다.</p>

<p>또한, 두 번째 인수로 true를 전달하면, 결과를 PHP 객체가 아닌 연관 배열로 반환해 준다.</p>

<p>아래는 예제이다.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$json</span> <span class="o">=</span> <span class="s1">'{"apple":"Fruits", "1":1, "참":true}'</span><span class="p">;</span>

<span class="nb">var_dump</span><span class="p">(</span><span class="nb">json_decode</span><span class="p">(</span><span class="nv">$json</span><span class="p">,</span> <span class="kc">true</span><span class="p">));</span>
</code></pre></div></div>

<h2 id="end">End..</h2>

<p>JSON은 XML과 함께 데이터를 전달하는 형식이며, XML보다 더 많이 사용되기 때문에 필수로 알아야할 표현법이다.</p>

<p>자바스크립트 뿐만 아니라 여러 언어에서 두루두루 사용 가능하기 때문에 꼭 숙지하자.</p>]]></content><author><name>Bonazoey</name></author><category term="Basic" /><category term="Basic" /><category term="Javascript" /><category term="Json" /><summary type="html"><![CDATA[JSON]]></summary></entry><entry><title type="html">[Java] No grammar constraint (DTD or XML Schema)</title><link href="/jekyll-theme-yat/java/2024/04/11/bind-to-grammar.html" rel="alternate" type="text/html" title="[Java] No grammar constraint (DTD or XML Schema)" /><published>2024-04-11T02:00:00+00:00</published><updated>2024-04-11T02:00:00+00:00</updated><id>/jekyll-theme-yat/java/2024/04/11/bind-to-grammar</id><content type="html" xml:base="/jekyll-theme-yat/java/2024/04/11/bind-to-grammar.html"><![CDATA[<p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/a2a0b34d-8cfa-4a37-b9d0-c85baab1cbc8" alt="image" /></p>

<p>이클립스에서 XML 파일을 만들고 보면 XML 선언부 아래에 <code class="language-plaintext highlighter-rouge">Bind to grammars/schema...</code>라고 뜬다.</p>

<p>이 뜻은 DTD나 XSD가 정의돼있지 않고 네임스페이스도 명시되지 않았다는 뜻인데, 해결 방법은 3가지가 있다.</p>

<h2 id="1-java에서-유효성-검사-무시">1. java에서 유효성 검사 무시</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">DocumentBuilderFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="nc">DocumentBuilderFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
<span class="nc">DocumentBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">newDocumentBuilder</span><span class="o">();</span>
<span class="nc">Document</span> <span class="n">doc</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"./xmlsrc/xpathsample.xml"</span><span class="o">);</span>

<span class="c1">// 스키마 유효성 검사 무시</span>
<span class="n">factory</span><span class="o">.</span><span class="na">setValidating</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
<span class="c1">// 네임스페이스 유효성 검사 무시</span>
<span class="n">factory</span><span class="o">.</span><span class="na">setNamespaceAware</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">DocumentBuilderFactory</code>에서 기본값으로 유효성 검사를 실시하기 때문에 유효성 검사 무시 설정을 해주면 스키마/네임스페이스에 대한 검사를 하지 않는다.</p>

<h2 id="2-xml-파서에게-알리기">2. XML 파서에게 알리기</h2>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</span>
</code></pre></div></div>

<p>XML 선언부에 <code class="language-plaintext highlighter-rouge">standalone</code>을 <code class="language-plaintext highlighter-rouge">no</code>로 설정해준다.</p>

<p><code class="language-plaintext highlighter-rouge">standalone</code>은 XML 파서에게 XML 문서의 독립성을 알리는 것이다. 사실 유효성 검사는 자바에서 설정해야되기 때문에 이걸 설정한다고 해도 유효성 검사는 실시된다.</p>

<p>사실 방법은 2개다. 어그로 죄송..</p>

<h2 id="3-스키마-정의하기">3. 스키마 정의하기</h2>

<p>그냥 스키마를 정의해주는 방법이 있다.</p>

<p>예제 XML 문서의 스키마를 정의해보자.</p>

<pre><code class="language-xsd">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
			targetNamespace="http://www.example.com/"
			xmlns:this="http://www.example.com/"&gt;
	
	&lt;!-- 루트요소 school 정의 --&gt;
	&lt;xs:element name="school"&gt;
		&lt;xs:complexType&gt;
			&lt;xs:sequence&gt;
				&lt;xs:element ref="this:class" minOccurs="1" maxOccurs="unbounded"/&gt;
			&lt;/xs:sequence&gt;
		&lt;/xs:complexType&gt;
	&lt;/xs:element&gt;
	
	&lt;!-- class 요소 정의 --&gt;
	&lt;xs:element name="class"&gt;
		&lt;xs:complexType&gt;
			&lt;xs:sequence&gt;
				&lt;xs:element ref="this:student" minOccurs="1" maxOccurs="unbounded"/&gt;
			&lt;/xs:sequence&gt;
			&lt;xs:attribute name="value" type="xs:integer" use="required"/&gt;
		&lt;/xs:complexType&gt;
	&lt;/xs:element&gt;
	
	&lt;!-- student 요소 정의 --&gt;
	&lt;xs:element name="student"&gt;
		&lt;xs:complexType&gt;
			&lt;xs:attribute name="name" type="xs:string" use="required"/&gt;
		&lt;/xs:complexType&gt;
	&lt;/xs:element&gt;
&lt;/xs:schema&gt;
</code></pre>

<p>루트요소에서 <code class="language-plaintext highlighter-rouge">ref</code> 속성을 통해 아래의 class 요소 정의를 참조해줬다. <code class="language-plaintext highlighter-rouge">ref</code> 속성은 <code class="language-plaintext highlighter-rouge">targetNamespace</code>가 정의돼있고 해당 네임스페이스가 명시돼지 않았을 경우 에러가 뜬다.</p>

<p>따라서 꼭 네임스페이스를 명시하고 사용해줘야한다. 그렇기에 접두사 <code class="language-plaintext highlighter-rouge">this</code>를 사용하여 해당 XSD의 class 요소를 참조할 수 있었다.</p>

<p>또 class 요소 안에 student를 참조하지 않고 포함시켜서 넣었을 경우 XML에서 네임스페이스를 지정하지 않아야 에러가 뜨지 않았고 지정하기 위해선 student 요소를 밖으로 빼고 참조하는 식으로 했어야했다.</p>

<p><code class="language-plaintext highlighter-rouge">xs:attribute</code>는 복합요소이기 때문에 <code class="language-plaintext highlighter-rouge">xs:complexType</code>에 넣어주었고 그 하위 태그에는 <code class="language-plaintext highlighter-rouge">xs:sequence</code>로 시작하였다.</p>

<p>해당 요소가 1개 이상인 것은 <code class="language-plaintext highlighter-rouge">minOccurs="1"</code>, <code class="language-plaintext highlighter-rouge">maxOccurs="unbounded"</code> 속성을 주었고, 꼭 필요한 값은 <code class="language-plaintext highlighter-rouge">use="required"</code>를 통해 명시해주었다.</p>

<p>이 스키마를 XML 문서에 적용시키게 되면 아래와 같아진다.</p>

<pre><code class="language-XML">&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
&lt;sc:school xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sc="http://www.example.com/"
	xsi:schemaLocation="http://www.example.com/ xpathxsd.xsd"&gt;

	&lt;sc:class value="1"&gt;
		&lt;sc:student name="김복수"&gt;&lt;/sc:student&gt;
		&lt;sc:student name="도우찬"&gt;&lt;/sc:student&gt;
		&lt;sc:student name="성숙희"&gt;&lt;/sc:student&gt;
	&lt;/sc:class&gt;
	&lt;sc:class value="2"&gt;
		&lt;sc:student name="강참모"&gt;&lt;/sc:student&gt;
		&lt;sc:student name="서소라"&gt;&lt;/sc:student&gt;
		&lt;sc:student name="함도영"&gt;&lt;/sc:student&gt;
	&lt;/sc:class&gt;
	&lt;sc:class value="3"&gt;
		&lt;sc:student name="가정식"&gt;&lt;/sc:student&gt;
		&lt;sc:student name="김가람"&gt;&lt;/sc:student&gt;
		&lt;sc:student name="김필창"&gt;&lt;/sc:student&gt;
		&lt;sc:student name="우미영"&gt;&lt;/sc:student&gt;
	&lt;/sc:class&gt;
&lt;/sc:school&gt;
</code></pre>

<p>사실 적용한 XSD가 하나 뿐이어서 충돌할 일이 없기 때문에 네임스페이스를 명시하지 않아도 되지만 예제로 다 명시해보았다.</p>

<p>이로써 <code class="language-plaintext highlighter-rouge">Well-formed XML</code>에서 <code class="language-plaintext highlighter-rouge">Valid XML</code>문서가 되었다.</p>

<p>더이상 <code class="language-plaintext highlighter-rouge">No grammar constraint</code>도 뜨지 않는다.</p>]]></content><author><name>Bonazoey</name></author><category term="Java" /><category term="Java" /><category term="XML" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">[Java] XML with XPath</title><link href="/jekyll-theme-yat/java/2024/04/11/xml-xpath.html" rel="alternate" type="text/html" title="[Java] XML with XPath" /><published>2024-04-11T01:00:00+00:00</published><updated>2024-04-11T01:00:00+00:00</updated><id>/jekyll-theme-yat/java/2024/04/11/xml-xpath</id><content type="html" xml:base="/jekyll-theme-yat/java/2024/04/11/xml-xpath.html"><![CDATA[<p>저번 포스팅에서 <a href="https://bonazoey.github.io/basic/2024/04/09/xpath.html" target="_blank">XPath</a>에 대해서 다뤘는데 이번엔 실제로 Java 내에서 활용하는 예제를 만들 것이다.</p>

<p>사용하는 메소드나 표현식은 기존 포스팅에서 참고하자.</p>

<p>XPath는 경로를 지정하는 언어이며 여러 용도로 사용되는데, XML 문서를 탐색하기 위해 경로 표현식(path expression)으로도 사용된다.</p>

<p>그래서 기존에 <code class="language-plaintext highlighter-rouge">getChildNode().getNodeName()</code> 이런 식으로 일일이 타고 들어가서 조건문을 통해 탐색하는 비효율적인 방법 대신 훨씬 간단하고 직관적인 방법을 사용해보도록 할 것이다.</p>

<h2 id="1-xml-문서-파싱">1. XML 문서 파싱</h2>

<p>아래는 XML 문서 예제이다.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- xpathsample.xml --&gt;</span>
<span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;school&gt;</span>
	<span class="nt">&lt;class</span> <span class="na">value=</span><span class="s">"1"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;student</span> <span class="na">name=</span><span class="s">"김복수"</span><span class="nt">&gt;&lt;/student&gt;</span>
		<span class="nt">&lt;student</span> <span class="na">name=</span><span class="s">"도우찬"</span><span class="nt">&gt;&lt;/student&gt;</span>
		<span class="nt">&lt;student</span> <span class="na">name=</span><span class="s">"성숙희"</span><span class="nt">&gt;&lt;/student&gt;</span>
	<span class="nt">&lt;/class&gt;</span>
	<span class="nt">&lt;class</span> <span class="na">value=</span><span class="s">"2"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;student</span> <span class="na">name=</span><span class="s">"강참모"</span><span class="nt">&gt;&lt;/student&gt;</span>
		<span class="nt">&lt;student</span> <span class="na">name=</span><span class="s">"서소라"</span><span class="nt">&gt;&lt;/student&gt;</span>
		<span class="nt">&lt;student</span> <span class="na">name=</span><span class="s">"함도영"</span><span class="nt">&gt;&lt;/student&gt;</span>
	<span class="nt">&lt;/class&gt;</span>
	<span class="nt">&lt;class</span> <span class="na">value=</span><span class="s">"3"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;student</span> <span class="na">name=</span><span class="s">"가정식"</span><span class="nt">&gt;&lt;/student&gt;</span>
		<span class="nt">&lt;student</span> <span class="na">name=</span><span class="s">"김가람"</span><span class="nt">&gt;&lt;/student&gt;</span>
		<span class="nt">&lt;student</span> <span class="na">name=</span><span class="s">"김필창"</span><span class="nt">&gt;&lt;/student&gt;</span>
		<span class="nt">&lt;student</span> <span class="na">name=</span><span class="s">"우미영"</span><span class="nt">&gt;&lt;/student&gt;</span>
	<span class="nt">&lt;/class&gt;</span>
<span class="nt">&lt;/school&gt;</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">test</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilder</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilderFactory</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.xpath.XPath</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.xpath.XPathConstants</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.xpath.XPathExpression</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.xpath.XPathFactory</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.w3c.dom.Document</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.w3c.dom.Element</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.w3c.dom.NodeList</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">XMLInXpath</span><span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
		<span class="nc">DocumentBuilderFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="nc">DocumentBuilderFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
		<span class="nc">DocumentBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">newDocumentBuilder</span><span class="o">();</span>
		<span class="nc">Document</span> <span class="n">doc</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"./xmlsrc/xpathsample.xml"</span><span class="o">);</span>
	<span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<p>위에서 일단 XML 문서를 파싱해주었다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">XPathFactory</span> <span class="n">xPathfoactory</span> <span class="o">=</span> <span class="nc">XPathFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
<span class="nc">XPath</span> <span class="n">xPath</span> <span class="o">=</span> <span class="n">xPathfoactory</span><span class="o">.</span><span class="na">newXPath</span><span class="o">();</span>

<span class="nc">XPathExpression</span> <span class="n">exp</span> <span class="o">=</span> <span class="n">xPath</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="s">"//student"</span><span class="o">);</span>
<span class="nc">XPathExpression</span> <span class="n">exp2</span> <span class="o">=</span> <span class="n">xPath</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="s">"//student[starts-with(@name, '김')]"</span><span class="o">);</span>

<span class="nc">NodeList</span> <span class="n">rs</span> <span class="o">=</span> <span class="o">(</span><span class="nc">NodeList</span><span class="o">)</span><span class="n">exp</span><span class="o">.</span><span class="na">evaluate</span><span class="o">(</span><span class="n">doc</span><span class="o">,</span> <span class="nc">XPathConstants</span><span class="o">.</span><span class="na">NODESET</span><span class="o">);</span>
<span class="nc">NodeList</span> <span class="n">rs2</span> <span class="o">=</span> <span class="o">(</span><span class="nc">NodeList</span><span class="o">)</span><span class="n">exp2</span><span class="o">.</span><span class="na">evaluate</span><span class="o">(</span><span class="n">doc</span><span class="o">,</span> <span class="nc">XPathConstants</span><span class="o">.</span><span class="na">NODESET</span><span class="o">);</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">XPathFactory</code>로부터 객체를 생성하고 <code class="language-plaintext highlighter-rouge">xPath</code>를 만들어 준다.</p>

<p>XPath는 <code class="language-plaintext highlighter-rouge">evaludate</code>를 위해서는 표현식을 컴파일 해주어야하기 때문에 <code class="language-plaintext highlighter-rouge">compile</code> 안에 원하는 표현식을 작성한다.</p>

<p><code class="language-plaintext highlighter-rouge">evaluate</code> 시 매개변수로는 해당되는 노드와 자바와 매핑되는 데이터 타입을 적어준다. 여기서 <code class="language-plaintext highlighter-rouge">XPathConstants.NODESET</code>은 자바의 NodeList와 매핑된다.</p>

<p>이때 반환되는 타입은 <code class="language-plaintext highlighter-rouge">Object</code> 타입이기 때문에 <code class="language-plaintext highlighter-rouge">NodeList</code>로 캐스팅해주고 표현식을 적용한 결과 <code class="language-plaintext highlighter-rouge">rs</code>, <code class="language-plaintext highlighter-rouge">rs2</code>에 담아준다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"[모든 학생 리스트]"</span><span class="o">);</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">rs</span><span class="o">.</span><span class="na">getLength</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
  <span class="nc">Element</span> <span class="n">item</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Element</span><span class="o">)</span><span class="n">rs</span><span class="o">.</span><span class="na">item</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
  <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">item</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">"name"</span><span class="o">));</span>
<span class="o">}</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n[성이 김씨인 학생 리스트]"</span><span class="o">);</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">rs2</span><span class="o">.</span><span class="na">getLength</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
  <span class="nc">Element</span> <span class="n">item</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Element</span><span class="o">)</span><span class="n">rs2</span><span class="o">.</span><span class="na">item</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
  <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">item</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">"name"</span><span class="o">));</span>
<span class="o">}</span>
</code></pre></div></div>

<p>반복문을 통해서 <code class="language-plaintext highlighter-rouge">모든 학생 리스트</code>와 <code class="language-plaintext highlighter-rouge">성이 김씨인 학생 리스트</code>를 각각 출력해보았다.</p>

<p>아래는 출력 결과이다.</p>

<p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/b466cb56-9481-44b1-99ee-8b6512c6bed2" alt="image" /></p>]]></content><author><name>Bonazoey</name></author><category term="Java" /><category term="Java" /><category term="XML" /><summary type="html"><![CDATA[저번 포스팅에서 XPath에 대해서 다뤘는데 이번엔 실제로 Java 내에서 활용하는 예제를 만들 것이다.]]></summary></entry><entry><title type="html">[Java] Java to XML</title><link href="/jekyll-theme-yat/java/2024/04/11/java-to-xml.html" rel="alternate" type="text/html" title="[Java] Java to XML" /><published>2024-04-11T00:00:00+00:00</published><updated>2024-04-11T00:00:00+00:00</updated><id>/jekyll-theme-yat/java/2024/04/11/java-to-xml</id><content type="html" xml:base="/jekyll-theme-yat/java/2024/04/11/java-to-xml.html"><![CDATA[<p>저번 포스팅에선 XML 문서를 XML DOM으로 파싱하여 Java로 변환하는 과정을 보았다.</p>

<p>이번엔 반대로 Java에서 XML로 파싱하는 방법을 다룰 것이다.</p>

<p>저번엔 get 메소드를 알아보았다면 이번엔 create, append, remove, 등의 메소드를 알아볼 것이다.</p>

<h2 id="기본-메소드">기본 메소드</h2>

<p>기본적으로 사용하는 메소드들이 있고 이외에도 많은 메소드들이 존재한다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">메소드</th>
      <th style="text-align: left">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">createElement(String tagName)</td>
      <td style="text-align: left">Element 객체를 생성</td>
    </tr>
    <tr>
      <td style="text-align: center">createAttribute(String name)</td>
      <td style="text-align: left">Att 객체를 생성</td>
    </tr>
    <tr>
      <td style="text-align: center">createTextNode(data)</td>
      <td style="text-align: left">Text 객체를 생성</td>
    </tr>
    <tr>
      <td style="text-align: center">createCDATASection(data)</td>
      <td style="text-align: left">CDATASection 객체를 생성</td>
    </tr>
    <tr>
      <td style="text-align: center">appendChild(Node newChild)</td>
      <td style="text-align: left">newChild를 자식 노드의 끝에 추가</td>
    </tr>
    <tr>
      <td style="text-align: center">removeChild(Node oldChild)</td>
      <td style="text-align: left">oldChild를 자식 노드에서 삭제</td>
    </tr>
    <tr>
      <td style="text-align: center">insertBefore(Node newChild, Node oldChild)</td>
      <td style="text-align: left">oldChild 앞에 newChild를 삽입</td>
    </tr>
    <tr>
      <td style="text-align: center">replaceChild(Node newChild, Node oldChild)</td>
      <td style="text-align: left">oldChild를 newChild로 교체</td>
    </tr>
  </tbody>
</table>

<h2 id="to-xml">to XML</h2>

<p>아래는 기본적으로 <a href="https://bonazoey.github.io/java/2024/04/09/xml-to-java.html" target="_blank">여기</a>에서 설명했던 것과 같이, 빌더 인스턴스를 생성하고 <code class="language-plaintext highlighter-rouge">doc</code> Document 데이터 타입까지 만드는 과정이다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">test</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.ByteArrayOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.nio.charset.StandardCharsets</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilder</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilderFactory</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.transform.OutputKeys</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.transform.Transformer</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.transform.TransformerFactory</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.transform.dom.DOMSource</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.transform.stream.StreamResult</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.w3c.dom.Document</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.w3c.dom.Element</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Java2XML</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
		
		<span class="nc">DocumentBuilderFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="nc">DocumentBuilderFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
		<span class="nc">DocumentBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">newDocumentBuilder</span><span class="o">();</span>
		
		<span class="nc">Document</span> <span class="n">doc</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="na">newDocument</span><span class="o">();</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="1-데이터-생성-및-삽입">1. 데이터 생성 및 삽입</h3>

<p>아래는 생성한 <code class="language-plaintext highlighter-rouge">doc</code>에 원하는 XML 데이터를 삽입하는 과정이다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 루트 요소 생성</span>
<span class="nc">Element</span> <span class="n">ele</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="na">createElement</span><span class="o">(</span><span class="s">"class"</span><span class="o">);</span>
<span class="n">ele</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"value"</span><span class="o">,</span> <span class="s">"학급"</span><span class="o">);</span>

<span class="c1">// 자식 요소 생성</span>
<span class="nc">Element</span> <span class="n">teacher</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="na">createElement</span><span class="o">(</span><span class="s">"teacher"</span><span class="o">);</span>
<span class="n">teacher</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"name"</span><span class="o">,</span> <span class="s">"김복남"</span><span class="o">);</span>
<span class="n">teacher</span><span class="o">.</span><span class="na">setTextContent</span><span class="o">(</span><span class="s">"1반 담임입니다."</span><span class="o">);</span>

<span class="nc">Element</span> <span class="n">teacher2</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="na">createElement</span><span class="o">(</span><span class="s">"teacher"</span><span class="o">);</span>
<span class="n">teacher2</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"name"</span><span class="o">,</span> <span class="s">"박봉팔"</span><span class="o">);</span>
<span class="n">teacher2</span><span class="o">.</span><span class="na">setTextContent</span><span class="o">(</span><span class="s">"2반 담임입니다."</span><span class="o">);</span>

<span class="nc">Element</span> <span class="n">teacher3</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="na">createElement</span><span class="o">(</span><span class="s">"teacher"</span><span class="o">);</span>
<span class="n">teacher3</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"name"</span><span class="o">,</span> <span class="s">"이창필"</span><span class="o">);</span>
<span class="n">teacher3</span><span class="o">.</span><span class="na">setTextContent</span><span class="o">(</span><span class="s">"3반 담임입니다."</span><span class="o">);</span>

<span class="nc">Element</span> <span class="n">teacher4</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="na">createElement</span><span class="o">(</span><span class="s">"teacher"</span><span class="o">);</span>
<span class="n">teacher4</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"name"</span><span class="o">,</span> <span class="s">"류정숙"</span><span class="o">);</span>
<span class="n">teacher4</span><span class="o">.</span><span class="na">setTextContent</span><span class="o">(</span><span class="s">"4반 담임입니다."</span><span class="o">);</span>

<span class="c1">// 루트 요소 추가</span>
<span class="n">doc</span><span class="o">.</span><span class="na">appendChild</span><span class="o">(</span><span class="n">ele</span><span class="o">);</span>
<span class="c1">// 자식 요소 추가</span>
<span class="n">ele</span><span class="o">.</span><span class="na">appendChild</span><span class="o">(</span><span class="n">teacher</span><span class="o">);</span>
<span class="c1">// 한 요소가 중복 추가되지 않는다</span>
<span class="n">ele</span><span class="o">.</span><span class="na">appendChild</span><span class="o">(</span><span class="n">teacher</span><span class="o">);</span>
<span class="n">ele</span><span class="o">.</span><span class="na">appendChild</span><span class="o">(</span><span class="n">teacher2</span><span class="o">);</span>
<span class="n">ele</span><span class="o">.</span><span class="na">appendChild</span><span class="o">(</span><span class="n">teacher3</span><span class="o">);</span>
<span class="n">ele</span><span class="o">.</span><span class="na">appendChild</span><span class="o">(</span><span class="n">teacher4</span><span class="o">);</span>
<span class="c1">// 요소 삭제</span>
<span class="n">ele</span><span class="o">.</span><span class="na">removeChild</span><span class="o">(</span><span class="n">teacher3</span><span class="o">);</span>
<span class="c1">// 요소 대체, 대체 시 새로 바뀌는 요소가 이미 존재한다면 그 요소는 없어진다</span>
<span class="n">ele</span><span class="o">.</span><span class="na">replaceChild</span><span class="o">(</span><span class="n">teacher2</span><span class="o">,</span> <span class="n">teacher</span><span class="o">);</span>
</code></pre></div></div>

<p>여기서 주의할 것이, 한 번 들어간 요소는 중복되어 들어가지 않는다. <code class="language-plaintext highlighter-rouge">teacher</code> 데이터를 <code class="language-plaintext highlighter-rouge">appendChild</code>를 통해 두 번 삽입 한다고 해도 실제로 출력해보면 하나만 존재한다.</p>

<p><code class="language-plaintext highlighter-rouge">replaceChild</code>도 마찬가지다. 다른 요소로 대체 시 이미 해당 요소가 존재할 때, 중복 변수가 삽입이 불가능하므로 기존에 있던 데이터가 없어진다.</p>

<h3 id="2-xml-데이터-출력">2. XML 데이터 출력</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">ByteArrayOutputStream</span> <span class="n">os</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ByteArrayOutputStream</span><span class="o">();</span>

<span class="nc">DOMSource</span> <span class="n">src</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DOMSource</span><span class="o">(</span><span class="n">doc</span><span class="o">);</span>
<span class="nc">StreamResult</span> <span class="n">rs</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StreamResult</span><span class="o">(</span><span class="n">os</span><span class="o">);</span>

<span class="nc">TransformerFactory</span> <span class="n">tsFactory</span> <span class="o">=</span> <span class="nc">TransformerFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
<span class="nc">Transformer</span> <span class="n">ts</span> <span class="o">=</span> <span class="n">tsFactory</span><span class="o">.</span><span class="na">newTransformer</span><span class="o">();</span>

<span class="c1">// 인코딩</span>
<span class="n">ts</span><span class="o">.</span><span class="na">setOutputProperty</span><span class="o">(</span><span class="nc">OutputKeys</span><span class="o">.</span><span class="na">ENCODING</span><span class="o">,</span> <span class="s">"UTF-8"</span><span class="o">);</span>
<span class="c1">// 들여쓰기</span>
<span class="n">ts</span><span class="o">.</span><span class="na">setOutputProperty</span><span class="o">(</span><span class="nc">OutputKeys</span><span class="o">.</span><span class="na">INDENT</span><span class="o">,</span> <span class="s">"yes"</span><span class="o">);</span>
<span class="n">ts</span><span class="o">.</span><span class="na">transform</span><span class="o">(</span><span class="n">src</span><span class="o">,</span> <span class="n">rs</span><span class="o">);</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">(</span><span class="n">os</span><span class="o">.</span><span class="na">toByteArray</span><span class="o">(),</span> <span class="nc">StandardCharsets</span><span class="o">.</span><span class="na">UTF_8</span><span class="o">));</span>
</code></pre></div></div>

<p>데이터를 편집한 <code class="language-plaintext highlighter-rouge">doc</code> 변수를 DOM 트리 형식으로 변환해준다.</p>

<p><code class="language-plaintext highlighter-rouge">TransformerFactory</code>는 <code class="language-plaintext highlighter-rouge">DocumentBuilderFactory</code>와 반대의 역할을 한다. 후자는 XML에서 자바로 파싱하는데 사용하였다면, 전자는 XML로 변환하기 위해 사용한다.</p>

<p><code class="language-plaintext highlighter-rouge">StreammResult</code>는 데이터가 스트림을 통과 후 나오는 결과에 대한 정보들을 정의할 수 있는데, 여기서는 <code class="language-plaintext highlighter-rouge">ByteArrayOutputStream</code> 데이터 타입으로 넣어줬고 프린트 시 <code class="language-plaintext highlighter-rouge">toByteArray()</code>를 사용하여 문자로 출력된다.</p>

<p>아래는 출력 화면이다.</p>

<p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/9b4630d5-8f32-49af-9693-fc3af42a0a09" alt="image" /></p>

<h3 id="3-xml-파일-생성">3. XML 파일 생성</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">ByteArrayOutputStream</span> <span class="n">os</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ByteArrayOutputStream</span><span class="o">();</span>

<span class="nc">DOMSource</span> <span class="n">src</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DOMSource</span><span class="o">(</span><span class="n">doc</span><span class="o">);</span>

<span class="nc">TransformerFactory</span> <span class="n">tsFactory</span> <span class="o">=</span> <span class="nc">TransformerFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
<span class="nc">Transformer</span> <span class="n">ts</span> <span class="o">=</span> <span class="n">tsFactory</span><span class="o">.</span><span class="na">newTransformer</span><span class="o">();</span>

<span class="nc">FileOutputStream</span> <span class="n">fo</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FileOutputStream</span><span class="o">(</span><span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"./xmlsrc/output.xml"</span><span class="o">));</span>
<span class="nc">StreamResult</span> <span class="n">rs</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StreamResult</span><span class="o">(</span><span class="n">fo</span><span class="o">);</span>

<span class="n">ts</span><span class="o">.</span><span class="na">setOutputProperty</span><span class="o">(</span><span class="nc">OutputKeys</span><span class="o">.</span><span class="na">ENCODING</span><span class="o">,</span> <span class="s">"UTF-8"</span><span class="o">);</span>
<span class="n">ts</span><span class="o">.</span><span class="na">setOutputProperty</span><span class="o">(</span><span class="nc">OutputKeys</span><span class="o">.</span><span class="na">INDENT</span><span class="o">,</span> <span class="s">"yes"</span><span class="o">);</span>
<span class="n">ts</span><span class="o">.</span><span class="na">transform</span><span class="o">(</span><span class="n">src</span><span class="o">,</span> <span class="n">rs</span><span class="o">);</span>

<span class="n">fo</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</code></pre></div></div>

<p>위와 동일하나 변환 정보인 <code class="language-plaintext highlighter-rouge">rs</code>를 단순 문자열에서 원하는 경로에 해당 데이터로 XML 문서를 작성하는 것으로 바꾸어주었다.</p>

<p>실행 후 <code class="language-plaintext highlighter-rouge">package explorer</code>를 refresh 하면 아래와 같이 XML 문서가 작성된 것을 볼 수 있다.</p>

<p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/479d76b4-e445-489e-943d-8d67dc5353c1" alt="image" /></p>

<p>아래는 생성된 XML 문서이다.</p>

<p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/b23e3d9d-b4c8-4170-a22a-cdd94ca326e0" alt="image" /></p>]]></content><author><name>Bonazoey</name></author><category term="Java" /><category term="Java" /><category term="XML" /><summary type="html"><![CDATA[저번 포스팅에선 XML 문서를 XML DOM으로 파싱하여 Java로 변환하는 과정을 보았다.]]></summary></entry><entry><title type="html">[Java] XML to Java (Node)</title><link href="/jekyll-theme-yat/java/2024/04/09/xml-to-java2.html" rel="alternate" type="text/html" title="[Java] XML to Java (Node)" /><published>2024-04-09T02:00:00+00:00</published><updated>2024-04-09T02:00:00+00:00</updated><id>/jekyll-theme-yat/java/2024/04/09/xml-to-java2</id><content type="html" xml:base="/jekyll-theme-yat/java/2024/04/09/xml-to-java2.html"><![CDATA[<p>저번 시간에 XML 문서를 파싱해서 Java에서 DOM 인스턴스로 만들어 객체 정보를 뽑아내는 것 과정을 거쳤다.</p>

<p>XML 정보를 가져오는 방법에는</p>

<ol>
  <li>
    <p>문자열 파싱</p>
  </li>
  <li>
    <p>내부 파일 파싱</p>
  </li>
  <li>
    <p>외부 URI 파싱</p>
  </li>
</ol>

<p>이렇게 세가지 방법이 있었다.</p>

<p>이번엔 좀 더 구체적으로 원하는 데이터를 가져오기 위해 사용하는 예제들을 만들어보려한다.</p>

<p>아래는 예제 XML 파일이다.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;customer</span> <span class="na">id=</span><span class="s">"cus"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;online&gt;</span>
        <span class="nt">&lt;name&gt;</span>고객1<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;age&gt;</span>28<span class="nt">&lt;/age&gt;</span>
        <span class="nt">&lt;gender</span> <span class="na">value=</span><span class="s">"man"</span><span class="nt">&gt;</span>Male<span class="nt">&lt;/gender&gt;</span>
    <span class="nt">&lt;/online&gt;</span>
<span class="nt">&lt;/customer&gt;</span>
</code></pre></div></div>

<p>아래 코드는 파싱까지 완료한 <code class="language-plaintext highlighter-rouge">doc</code> 변수를 미리 만든 과정이다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">test</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilder</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilderFactory</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.w3c.dom.Document</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.w3c.dom.Element</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>

		<span class="nc">DocumentBuilderFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="nc">DocumentBuilderFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
		<span class="nc">DocumentBuilder</span> <span class="n">build</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">newDocumentBuilder</span><span class="o">();</span>
		<span class="nc">Document</span> <span class="n">doc</span> <span class="o">=</span> <span class="n">build</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"./xmlsrc/sample.xml"</span><span class="o">);</span>

	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="1-가장-상위-element-가져오기">1. 가장 상위 element 가져오기</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Element</span> <span class="n">ele</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="na">getDocumentElement</span><span class="o">();</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ele</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">"id"</span><span class="o">);</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ele</span><span class="o">.</span><span class="na">getNodeName</span><span class="o">();</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">doc</code>변수에 <code class="language-plaintext highlighter-rouge">getDocumnetElement()</code> 메소드를 이용하여 루트 요소를 가져올 수 있다.</p>

<p><code class="language-plaintext highlighter-rouge">getAttribute()</code> 메소드는 해당 속성값을 가져오고</p>

<p><code class="language-plaintext highlighter-rouge">getNodeName()</code> 메소드는 해당 엘리먼트의 이름을 가져온다.</p>

<p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/506cea31-4611-4e7b-80a3-2baf54e2c770" alt="image" /></p>

<p>출력이 정상적으로 되는 것을 확인할 수 있다.</p>

<h2 id="2-첫-번째-node-가져오기">2. 첫 번째 node 가져오기</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Node</span> <span class="n">node</span> <span class="o">=</span> <span class="n">ele</span><span class="o">.</span><span class="na">getFirstChild</span><span class="o">();</span>
		
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">node</span><span class="o">.</span><span class="na">getNodeName</span><span class="o">());</span>
</code></pre></div></div>

<p>루트 요소는 <code class="language-plaintext highlighter-rouge">element</code>로 가져오지만 그 뒤로는 <code class="language-plaintext highlighter-rouge">Node</code> 타입으로 받는다.</p>

<p>여기서 <code class="language-plaintext highlighter-rouge">ele</code>로부터 <code class="language-plaintext highlighter-rouge">getFirstChild()</code> 메소드를 통해 첫 번째 자식 노드를 가져와 <code class="language-plaintext highlighter-rouge">node</code> 변수에 담아주고 노드 이름을 출력해봤다.</p>

<p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/4393cbea-83af-4b89-b8f4-aa3c40067506" alt="image" /></p>

<p>하지만 <code class="language-plaintext highlighter-rouge">online</code>이 출력되길 기대했으나 실제로 출력된 건 <code class="language-plaintext highlighter-rouge">#text</code>였다.</p>

<p>그 이유는 <code class="language-plaintext highlighter-rouge">&lt;customer&gt;</code>와 <code class="language-plaintext highlighter-rouge">&lt;online&gt;</code> 사이에 공백이 존재하기 때문이다.</p>

<p>이렇게 두 요소 사이에 공백이나 텍스트가 있을 경우 #text가 나오게 되는데 이는 다음 자식 요소로 넘어가는 <code class="language-plaintext highlighter-rouge">getNextSibling()</code> 메소드를 사용해주면 해결된다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Node</span> <span class="n">node</span> <span class="o">=</span> <span class="n">ele</span><span class="o">.</span><span class="na">getFirstChild</span><span class="o">().</span><span class="na">getNextSibling</span><span class="o">();</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">node</span><span class="o">.</span><span class="na">getNodeName</span><span class="o">());</span>
</code></pre></div></div>

<p>아래는 출력 결과이다.</p>

<p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/9ba33956-ee19-4804-9da9-8230f810f780" alt="image" /></p>

<p>정상 출력 되는 것을 확인할 수 있다.</p>

<h2 id="3-nodelist로-xml-정보-가져오기">3. NodeList로 XML 정보 가져오기</h2>

<p>그러면 NodeList를 통해 <code class="language-plaintext highlighter-rouge">&lt;name&gt;</code>, <code class="language-plaintext highlighter-rouge">&lt;age&gt;</code>, <code class="language-plaintext highlighter-rouge">&lt;gender&gt;</code>를 모두 출력해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Node</span> <span class="n">node</span> <span class="o">=</span> <span class="n">ele</span><span class="o">.</span><span class="na">getFirstChild</span><span class="o">();</span>
		
<span class="nc">NodeList</span> <span class="n">nList</span> <span class="o">=</span> <span class="n">node</span><span class="o">.</span><span class="na">getNextSibling</span><span class="o">().</span><span class="na">getChildNodes</span><span class="o">();</span>

<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">nList</span><span class="o">.</span><span class="na">getLength</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
  <span class="nc">Node</span> <span class="n">item</span> <span class="o">=</span> <span class="n">nList</span><span class="o">.</span><span class="na">item</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
  <span class="k">if</span> <span class="o">(</span><span class="n">item</span><span class="o">.</span><span class="na">getNodeType</span><span class="o">()</span> <span class="o">==</span> <span class="nc">Node</span><span class="o">.</span><span class="na">ELEMENT_NODE</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">item</span><span class="o">.</span><span class="na">getNodeName</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">item</span><span class="o">.</span><span class="na">getTextContent</span><span class="o">());</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">item</span><span class="o">.</span><span class="na">getAttributes</span><span class="o">().</span><span class="na">getLength</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
      <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">item</span><span class="o">.</span><span class="na">getAttributes</span><span class="o">().</span><span class="na">getNamedItem</span><span class="o">(</span><span class="s">"value"</span><span class="o">).</span><span class="na">getNodeValue</span><span class="o">());</span>
    <span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>위와 같이 <code class="language-plaintext highlighter-rouge">ele.getFirstChild()</code>를 통해 자식 노드를 얻어주고, nList에 넣기 전에 <code class="language-plaintext highlighter-rouge">getNextSibling()</code> 메소드를 이용해 공백 다음 노드인 <code class="language-plaintext highlighter-rouge">&lt;online&gt;</code> 노드를 향해준다.</p>

<p>그 후 <code class="language-plaintext highlighter-rouge">getChildNodes()</code> 메소드로 <code class="language-plaintext highlighter-rouge">&lt;online&gt;</code> 노드의 자식 노드들(name, age, gender)를 <code class="language-plaintext highlighter-rouge">nList</code>에 모두 담아준다.</p>

<p>반복문을 돌면서 <code class="language-plaintext highlighter-rouge">item</code> 변수에  <code class="language-plaintext highlighter-rouge">&lt;online&gt;</code>의 자식 노드들을 하나씩 담아주고 반복문 안의 조건문에서 <code class="language-plaintext highlighter-rouge">getNodeType()</code> 메소드를 통해 해당 노드의 엘리먼트 타입을 확인해준다.</p>

<p>이 때 <code class="language-plaintext highlighter-rouge">Node.ELEMENT_NODE</code> 또는 <code class="language-plaintext highlighter-rouge">1</code>과 같을 시 출력을 시작한다.</p>

<p>노드 타입에 대한 상수는 해당 클래스에 들어가면 확인할 수 있다.</p>

<p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/395d3637-12eb-44cb-b40e-b2e452f39725" alt="image" /></p>

<p>노드 타입은 총 12개가 있으며, 만약 공백이나 텍스트가 온다면 <code class="language-plaintext highlighter-rouge">TEXT_NODE</code>에 해당되는 <code class="language-plaintext highlighter-rouge">3</code>이 될 것이다.</p>

<p>그 후 노드 이름과, 그 안의 컨텐츠를 출력해준다.</p>

<p>여기서 <code class="language-plaintext highlighter-rouge">getTextContent()</code> 메소드는 해당 노드 안에 있는 모든 값을 출력하는 것이다.</p>

<p>그리고 마지막 조건문은 해당 노드의 속성을 확인해서 1개 이상 존재할 시 수행한다.</p>

<p><code class="language-plaintext highlighter-rouge">item.getAttributes().getNamedItem("value").getNodeValue()</code>는 순서대로 속성을 가져온 뒤, 속성 중 <code class="language-plaintext highlighter-rouge">value</code>라는 이름의 속성을 찾고 속성값을 출력하는 메소드이다.</p>

<p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/cab510a6-df0e-4d1f-9f6f-3cf6abbaeaa4" alt="image" /></p>

<p>출력은 기대한 대로 나오는 것을 확인할 수 있다.</p>

<h2 id="end">End..</h2>

<p>노드는 출력 뿐만 아니라 삽입 삭제 등도 마찬가지로 가능하다.</p>

<p>노드나 엘리먼트 타입에 관한 메소드를 살펴보면 어떤 기능을 하는 메소드인지 바로 보일정도로 직관적이니 필요할 때 바로바로 사용해보자.</p>]]></content><author><name>Bonazoey</name></author><category term="Java" /><category term="Java" /><category term="XML" /><summary type="html"><![CDATA[저번 시간에 XML 문서를 파싱해서 Java에서 DOM 인스턴스로 만들어 객체 정보를 뽑아내는 것 과정을 거쳤다.]]></summary></entry><entry><title type="html">[Java] XML to Java (Parsing)</title><link href="/jekyll-theme-yat/java/2024/04/09/xml-to-java.html" rel="alternate" type="text/html" title="[Java] XML to Java (Parsing)" /><published>2024-04-09T01:00:00+00:00</published><updated>2024-04-09T01:00:00+00:00</updated><id>/jekyll-theme-yat/java/2024/04/09/xml-to-java</id><content type="html" xml:base="/jekyll-theme-yat/java/2024/04/09/xml-to-java.html"><![CDATA[<p>기본적으로 파일 형식이 다른 것 끼리는 호환이 되지 않는다.</p>

<p>생 XML 문서의 데이터의 구조를 Java에서 읽을 수 없다.</p>

<p>그렇기 때문에 Java든 어떤 프로그램이든 XML 문서를 읽기 위해선 <strong>파싱 단계</strong>를 거쳐야 하는데</p>

<p><a href="https://bonazoey.github.io/basic/2024/04/05/xml.html" target="_blank">여기</a>에서 말한 것 처럼 파싱의 단계는 <code class="language-plaintext highlighter-rouge">XML 문서의 문자열 → XML DOM 객체 → 객체에서 정보 추출</code>의 과정을 거친다.</p>

<p>따라서 이번 포스팅에선 <code class="language-plaintext highlighter-rouge">XML to Java</code> 파싱에 대해 알아볼 것이다.</p>

<h2 id="xml-data">XML Data</h2>

<p>먼저 XML 데이터는 총 3가지 방법으로 받을 수 있다.</p>

<ol>
  <li>
    <p>다른 시스템으로 받은 응답, 소스 내부의 문자열(String)</p>
  </li>
  <li>
    <p>시스템 내부 XML파일을 불러올 경우</p>
  </li>
  <li>
    <p>외부 사이트에서 제공하는 XML 데이터를 URL로 불러오는 경우</p>
  </li>
</ol>

<h3 id="1-문자열-파싱">1. 문자열 파싱</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">test</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.ByteArrayInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStream</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilder</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilderFactory</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.w3c.dom.Document</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.w3c.dom.Element</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
		
		<span class="nc">String</span> <span class="n">sample</span> <span class="o">=</span> <span class="s">"&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\r\n"</span>
				<span class="o">+</span> <span class="s">"&lt;customer id=\"cus\"&gt;\r\n"</span>
				<span class="o">+</span> <span class="s">"    &lt;online&gt;\r\n"</span>
				<span class="o">+</span> <span class="s">"        &lt;name&gt;고객1&lt;/name&gt;\r\n"</span>
				<span class="o">+</span> <span class="s">"        &lt;age&gt;28&lt;/age&gt;\r\n"</span>
				<span class="o">+</span> <span class="s">"        &lt;gender&gt;Male&lt;/gender&gt;\r\n"</span>
				<span class="o">+</span> <span class="s">"    &lt;/online&gt;\r\n"</span>
				<span class="o">+</span> <span class="s">"&lt;/customer&gt;"</span><span class="o">;</span>
		<span class="nc">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ByteArrayInputStream</span><span class="o">(</span><span class="n">sample</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">));</span>
				
		<span class="nc">DocumentBuilderFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="nc">DocumentBuilderFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
		<span class="nc">DocumentBuilder</span> <span class="n">build</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">newDocumentBuilder</span><span class="o">();</span>
		<span class="nc">Document</span> <span class="n">doc</span> <span class="o">=</span> <span class="n">build</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">is</span><span class="o">);</span>
		
		<span class="nc">Element</span> <span class="n">ele</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="na">getDocumentElement</span><span class="o">();</span>
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ele</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">"id"</span><span class="o">));</span>
	<span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<p>일단 문자열 안에 <code class="language-plaintext highlighter-rouge">"</code>를 써주기 위해서는 역슬래시<code class="language-plaintext highlighter-rouge">＼</code>를 붙여 반드시 <code class="language-plaintext highlighter-rouge">"＼"</code> 이 형태로 만들어줘야한다.</p>

<p><code class="language-plaintext highlighter-rouge">sample</code> 변수에 xml 데이터를 할당해주었고, <code class="language-plaintext highlighter-rouge">InputStream</code>을 통해 데이터를 받았다.</p>

<p><code class="language-plaintext highlighter-rouge">InputStream</code> 클래스의 주석을 살펴보면 다음과 같이 적혀있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * This abstract class is the superclass of all classes representing
 * an input stream of bytes.
 *
 * &lt;p&gt; Applications that need to define a subclass of &lt;code&gt;InputStream&lt;/code&gt;
 * must always provide a method that returns the next byte of input.
 *
 * @author  Arthur van Hoff
 * @see     java.io.BufferedInputStream
 * @see     java.io.ByteArrayInputStream
 * @see     java.io.DataInputStream
 * @see     java.io.FilterInputStream
 * @see     java.io.InputStream#read()
 * @see     java.io.OutputStream
 * @see     java.io.PushbackInputStream
 * @since   1.0
 */</span>
</code></pre></div></div>

<p>이 클래스는 <code class="language-plaintext highlighter-rouge">input stream of bytes(데이터의 입력 통로)</code>를 대표하는 수퍼클래스라고 정의돼 있다.</p>

<p>여기서 <code class="language-plaintext highlighter-rouge">@see</code>안에 있는 클래스들은 이 것과 관련된 클래스들 같고, 여기서 <code class="language-plaintext highlighter-rouge">ByteArrayInputStream</code> 생성자를 통해 입력 받은 문자열을 InputStream 타입으로 만들어주었다.</p>

<p>뒤의 <code class="language-plaintext highlighter-rouge">build</code> 객체에서 사용하는 <code class="language-plaintext highlighter-rouge">parse</code> 메소드는 문자열 그대로를 매개변수로 받을 수 없고 <code class="language-plaintext highlighter-rouge">InputStream</code> 타입으로 받을 수 있기 때문이다. 여기서 캐릭터셋에 문제가 있을 경우 <code class="language-plaintext highlighter-rouge">getBytes()</code> 안에 <code class="language-plaintext highlighter-rouge">"UTF-8"</code>을 넘겨주면 된다.</p>

<p>그 후 <code class="language-plaintext highlighter-rouge">DocumentBuilderFactory</code>를 사용해 XML DOM 파서 생성용 인스턴스인 <code class="language-plaintext highlighter-rouge">factory</code>를 만들어 준다.</p>

<p><code class="language-plaintext highlighter-rouge">DocumnetBuilder</code>는 DOM 문서용 인스턴스를 얻기 위한 클래스로 factory를 통해 생성한다.</p>

<p>쉽게 말하면 <code class="language-plaintext highlighter-rouge">factory</code>에서 DOM 문서 인스턴스를 얻어주는 <code class="language-plaintext highlighter-rouge">build</code>를 생성하고 <code class="language-plaintext highlighter-rouge">build</code>를 통해 XML데이터를 파싱해서 <code class="language-plaintext highlighter-rouge">doc</code>에 DOM형태의 데이터로 담아준다.</p>

<p>그렇게 얻은 <code class="language-plaintext highlighter-rouge">doc</code>에서 루트 요소를 가져온뒤 <code class="language-plaintext highlighter-rouge">id</code> 속성을 가져와 출력을 해보았다.</p>

<p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/0348de9b-ab96-410b-9286-84a603a2aaf1" alt="image" /></p>

<p>콘솔에 제대로 출력된다.</p>

<h3 id="2-내부-xml-파일">2. 내부 XML 파일</h3>

<p>이번엔 프로젝트 폴더 내부에 xml 예제 파일을 아래와 같이 구성하였다.</p>

<p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/a0b172f3-5ccf-4182-9361-04878be581b1" alt="image" /></p>

<p>이 후 코드는 위와 비슷하지만 <code class="language-plaintext highlighter-rouge">InputStream</code>을 통해 데이터를 가져오는 부분은 생략됐다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">test</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilder</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilderFactory</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.w3c.dom.Document</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.w3c.dom.Element</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>

		<span class="nc">DocumentBuilderFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="nc">DocumentBuilderFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
		<span class="nc">DocumentBuilder</span> <span class="n">build</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">newDocumentBuilder</span><span class="o">();</span>
		<span class="nc">Document</span> <span class="n">doc</span> <span class="o">=</span> <span class="n">build</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"./xmlsrc/sample.xml"</span><span class="o">);</span>
		
		<span class="nc">Element</span> <span class="n">ele</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="na">getDocumentElement</span><span class="o">();</span>
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ele</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">"id"</span><span class="o">));</span>
	<span class="o">}</span>

<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-외부-url">3. 외부 URL</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">test</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilder</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilderFactory</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.w3c.dom.Document</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.w3c.dom.Element</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
				
		<span class="nc">DocumentBuilderFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="nc">DocumentBuilderFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
		<span class="nc">DocumentBuilder</span> <span class="n">build</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">newDocumentBuilder</span><span class="o">();</span>
		<span class="nc">Document</span> <span class="n">doc</span> <span class="o">=</span> <span class="n">build</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"http://www.kma.go.kr/weather/forecast/mid-term-rss3.jsp?stnId=108"</span><span class="o">);</span>
		
		<span class="nc">Element</span> <span class="n">ele</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="na">getDocumentElement</span><span class="o">();</span>
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ele</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">"version"</span><span class="o">));</span>
	<span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<p>외부 URI을 사용할 경우 그대로 위의 방법과 같고 파일 경로 대신에 URI를 넣어주면 된다.</p>

<p>여기서는 루트 요소의 <code class="language-plaintext highlighter-rouge">version</code> 속성의 속성값 <code class="language-plaintext highlighter-rouge">2.0</code>이 출력된다.</p>

<p><a href="https://www.kma.go.kr/weather/forecast/mid-term-rss3.jsp?stnId=108" target="_blank">예제 URI</a></p>

<h2 id="end">End..</h2>

<p>이번엔 단순히 XML을 Java에서 사용하기 위해 파싱하는 과정을 작성하고, 테스트를 위해 속성값을 출력해보았다.</p>

<p>하지만 이것은 시작에 불과할 뿐 내가 원하는 데이터로 조건을 걸어주고 정제를 하고 json으로 변환시키고 하기 위해선 추가 단계들이 남았다.</p>]]></content><author><name>Bonazoey</name></author><category term="Java" /><category term="Java" /><category term="XML" /><summary type="html"><![CDATA[기본적으로 파일 형식이 다른 것 끼리는 호환이 되지 않는다.]]></summary></entry><entry><title type="html">[Basic] XPath</title><link href="/jekyll-theme-yat/basic/2024/04/09/xpath.html" rel="alternate" type="text/html" title="[Basic] XPath" /><published>2024-04-09T00:00:00+00:00</published><updated>2024-04-09T00:00:00+00:00</updated><id>/jekyll-theme-yat/basic/2024/04/09/xpath</id><content type="html" xml:base="/jekyll-theme-yat/basic/2024/04/09/xpath.html"><![CDATA[<h2 id="xpath">XPath</h2>

<p>XPath(XML Path Language)는 XML 문서의 특정 요소나 속성에 접근하기 위한 경로를 지정하는 언어이다.</p>

<p>X3C 표준 권고안으로, XSLT와 XPointer에 사용될 목적으로 만들어졌다.</p>

<p>또, XML DOM에서 노드를 검색할 때에도 사용할 수 있다.</p>

<p>XPath는 다음과 같은 특징을 가진다.</p>

<ol>
  <li>
    <p>XML 문서를 탐색하기 위해 경로 표현식(path expression)을 사용한다.</p>
  </li>
  <li>
    <p>수학, 문자열 처리 등을 하기 위한 표준 함수 라이브러리를 내장하고 있다.</p>
  </li>
  <li>
    <p>W3C의 표준 권고안인 XSLT에서 가장 중요한 부분이다.</p>
  </li>
</ol>

<p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/a8244b76-7707-4a42-be74-00f4efd98782" alt="image" /></p>

<p>XPath에서 사용하는 노드의 형식은 다음과 같이 구분된다.</p>

<ul>
  <li>
    <p>루트 노드</p>
  </li>
  <li>
    <p>요소 노드</p>
  </li>
  <li>
    <p>텍스트 노드</p>
  </li>
  <li>
    <p>속성 노드</p>
  </li>
  <li>
    <p>주석 노드</p>
  </li>
  <li>
    <p>네임스페이스 노드</p>
  </li>
  <li>
    <p>처리 명령(processing instruction) 노드</p>
  </li>
</ul>

<h2 id="1-xpath-표현식expression">1. XPath 표현식(Expression)</h2>

<p>XML 문서의 노드나 <u>노드셋을</u><sup id="fnref:ns"><a href="#fn:ns" class="footnote" rel="footnote" role="doc-noteref">1</a></sup> 선택하기 위해 다양한 표현식을 사용한다.</p>

<h3 id="1-1-위치-경로">1-1. 위치 경로</h3>

<p>위치 경로는 절대 경로와 상대 경로로 구분할 수 있다.</p>

<p>절대 경로는 <code class="language-plaintext highlighter-rouge">/</code>로 시작하고 상대 경로는 <code class="language-plaintext highlighter-rouge">/</code>로 시작하지 않는다.</p>

<p>다음은 위치 경로 표현에 사용되는 대표적인 연산자이다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">경로 연산자</th>
      <th style="text-align: left">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">노드 이름</td>
      <td style="text-align: left">해당 ‘노드 이름’과 일치하는 모든 노드를 선택함.</td>
    </tr>
    <tr>
      <td style="text-align: center">/</td>
      <td style="text-align: left">루트 노드부터 순서대로 탐색해 나감.</td>
    </tr>
    <tr>
      <td style="text-align: center">//</td>
      <td style="text-align: left">현재 노드의 위치와 상관없이 지정된 노드에서부터 순서대로 탐색해 나감.</td>
    </tr>
    <tr>
      <td style="text-align: center">.</td>
      <td style="text-align: left">현재 노드를 선택함.</td>
    </tr>
    <tr>
      <td style="text-align: center">..</td>
      <td style="text-align: left">현재 노드의 부모 노드를 선택함.</td>
    </tr>
    <tr>
      <td style="text-align: center">@</td>
      <td style="text-align: left">속성 노드를 선택함.</td>
    </tr>
  </tbody>
</table>

<p>아래는 예제이다.</p>

<pre><code class="language-txt">name         : &lt;name&gt; 요소를 모두 선택한다.
/age         : 루트 노드부터 찾아서 자식 노드인 &lt;age&gt; 요소를 선택 (절대 경로)
age/older    : &lt;age&gt; 요소중 &lt;older&gt; 요소 모두를 선택 (상대 경로)
//           : 루트 노드의 하위 노드 모두 선택
//name       : 위치 상관 없이 &lt;name&gt; 요소를 모두 선택
.//          : 현재 노드의 하위 노드를 모두 선택
location/@do : 모든 &lt;location&gt; 요소의 do 속성 노드를 모두 선택
</code></pre>

<h3 id="1-2-경로-표현식">1-2. 경로 표현식</h3>

<p>경로 표현식 작성 문법은 아래와 같다.</p>

<pre><code class="language-txt">검색방향::노드테스트[필터표현식]
</code></pre>

<ol>
  <li>
    <p>검색 방향 : 현재 노드 기준으로 노드를 검색할 방향을 전달한다.</p>
  </li>
  <li>
    <p>노드 테스트 : 검색 방향에 존재하는 해당 노드를 검색한다.</p>
  </li>
  <li>
    <p>필터 표현식 : 검색된 노드셋에서 특정 노드나 특정 값을 포함하는 노드를 선택한다.</p>
  </li>
</ol>

<p>아래는 예제이다.</p>

<pre><code class="language-txt">child::language            : 현재 노드의 자식 노드 중 &lt;language&gt;요소를 모두 선택함.
attribute::version         : 현재 노드의 version 속성 노드를 선택함.
descendant::*              : 현재 노드의 자손 노드를 모두 선택함.
descendant::text()         : 현재 노드의 자손 노드 중 텍스트 노드를 모두 선택함.
ancestor::language         : 현재 노드의 조상 노드 중 &lt;language&gt;요소를 모두 선택함.
ancestor-or-self::language : 현재 노드와 현재 노드의 조상 노드 중 &lt;language&gt;요소를 모두 선택함.
child::*/child::category   : 현재 노드의 자식 노드의 자식 노드 중 &lt;category&gt;요소를 모두 선택함.
</code></pre>

<h4 id="1-2-1-검색-방향">1-2-1. 검색 방향</h4>

<p>아래는 XPath에서 사용할 수 있는 검색 방향(axis step)이다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">검색 방향</th>
      <th style="text-align: left">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">self</td>
      <td style="text-align: left">현재 노드를 선택함.</td>
    </tr>
    <tr>
      <td style="text-align: center">attribute</td>
      <td style="text-align: left">현재 노드의 속성 노드를 모두 선택함.</td>
    </tr>
    <tr>
      <td style="text-align: center">namespace</td>
      <td style="text-align: left">현재 노드의 네임스페이스 노드를 모두 선택함.</td>
    </tr>
    <tr>
      <td style="text-align: center">child</td>
      <td style="text-align: left">현재 노드의 자식 노드를 모두 선택함.</td>
    </tr>
    <tr>
      <td style="text-align: center">descendant</td>
      <td style="text-align: left">현재 노드의 자손 노드를 모두 선택함.</td>
    </tr>
    <tr>
      <td style="text-align: center">descendant-or-self</td>
      <td style="text-align: left">현재 노드와 현재 노드의 자손 노드를 모두 선택함.</td>
    </tr>
    <tr>
      <td style="text-align: center">following</td>
      <td style="text-align: left">XML 문서에서 현재 노드의 종료 태그 이후에 등장하는 모든 노드를 선택함.</td>
    </tr>
    <tr>
      <td style="text-align: center">following-sibling</td>
      <td style="text-align: left">현재 노드 이후에 위치하는 형제 노드를 모두 선택함.</td>
    </tr>
    <tr>
      <td style="text-align: center">parent</td>
      <td style="text-align: left">현재 노드의 부모 노드를 선택함.</td>
    </tr>
    <tr>
      <td style="text-align: center">ancestor</td>
      <td style="text-align: left">현재 노드의 조상 노드를 모두 선택함.</td>
    </tr>
    <tr>
      <td style="text-align: center">ancestor-or-self</td>
      <td style="text-align: left">현재 노드와 현재 노드의 조상 노드를 모두 선택함.</td>
    </tr>
    <tr>
      <td style="text-align: center">preceding</td>
      <td style="text-align: left">XML 문서에서 현재 노드 이전에 등장하는 모든 노드를 선택함.</td>
    </tr>
  </tbody>
</table>

<p>(조상 노드, 속성 노드, 네임스페이스 노드는 제외함)</p>

<p>preceding-sibling	현재 노드 이전에 위치하는 형제 노드를 모두 선택함.</p>

<h4 id="1-2-2-필터-표현식">1-2-2. 필터 표현식</h4>

<p>특정 노드나 특정 값을 포함하는 노드를 선택하기 위해 사용한다.</p>

<p>언제나 대괄호<code class="language-plaintext highlighter-rouge">[]</code> 안에 표현된다.</p>

<p>아래는 예제이다.</p>

<pre><code class="language-txt">p_languages/language[1]              : &lt;p_languages&gt;요소의 자식 노드 중 첫 번째 &lt;language&gt;요소를 선택함.
p_languages/language[position() &lt; 3] : &lt;p_languages&gt;요소의 자식 노드 중 처음 두 개의 &lt;language&gt;요소를 선택함.
p_languages/language[last()]         : &lt;p_languages&gt;요소의 자식 노드 중 마지막 &lt;language&gt;요소를 선택함.
//priority[@rating]                  : rating 속성을 가지고 있는 &lt;priority&gt;요소를 모두 선택함.
//priority[@rating = 3]              : rating 속성의 속성값이 3인 &lt;priority&gt;요소를 모두 선택함.
count(//language)                    : 모든 &lt;language&gt;요소의 개수를 반환함.
</code></pre>

<h3 id="1-3-xpath-함수">1-3. XPath 함수</h3>

<p>조건에 맞는 노드를 시퀀스 형태로 반환한다.</p>

<p>아래는 많이 사용하는 함수이다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">XPath 함수</th>
      <th style="text-align: left">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">position()</td>
      <td style="text-align: left">현재 노드셋 안에서의 노드의 위치를 반환함.</td>
    </tr>
    <tr>
      <td style="text-align: center">last()</td>
      <td style="text-align: left">현재 노드셋의 마지막 노드를 반환함.</td>
    </tr>
    <tr>
      <td style="text-align: center">count(위치경로)</td>
      <td style="text-align: left">지정된 노드셋의 총 노드 개수를 반환함.</td>
    </tr>
    <tr>
      <td style="text-align: center">name()</td>
      <td style="text-align: left">현재 노드의 이름을 반환함.</td>
    </tr>
    <tr>
      <td style="text-align: center">name(위치경로)</td>
      <td style="text-align: left">지정된 노드셋의 첫 번째 노드를 반환함.</td>
    </tr>
  </tbody>
</table>

<h3 id="1-4-임의-문자-기호">1-4. 임의 문자 기호</h3>

<p>XPath에서는 임의의 노드를 선택하기 위해 임의 문자 기호(wild card)를 사용할 수 있다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">임의 문자 기호</th>
      <th style="text-align: left">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">*</td>
      <td style="text-align: left">어떠한 요소 노드와도 일치함.</td>
    </tr>
    <tr>
      <td style="text-align: center">@*</td>
      <td style="text-align: left">어떠한 속성 노드와도 일치함.</td>
    </tr>
    <tr>
      <td style="text-align: center">node()</td>
      <td style="text-align: left">어떠한 종류의 어떤 노드와도 일치함.</td>
    </tr>
    <tr>
      <td style="text-align: center">text()</td>
      <td style="text-align: left">어떠한 텍스트 노드와도 일치함.</td>
    </tr>
  </tbody>
</table>

<h2 id="end">End..</h2>

<p>쉽다 쉬워.. 그냥 경로를 표현하는 문법이기 때문에 너무 간단하다.</p>

<hr />

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:ns">
      <p>node-set; 중복을 허용하지 않는 노드들의 순서없는 집합. <a href="#fnref:ns" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Bonazoey</name></author><category term="Basic" /><category term="Basic" /><category term="XML" /><summary type="html"><![CDATA[XPath]]></summary></entry><entry><title type="html">[Basic] XSLT</title><link href="/jekyll-theme-yat/basic/2024/04/08/xsl.html" rel="alternate" type="text/html" title="[Basic] XSLT" /><published>2024-04-08T02:00:00+00:00</published><updated>2024-04-08T02:00:00+00:00</updated><id>/jekyll-theme-yat/basic/2024/04/08/xsl</id><content type="html" xml:base="/jekyll-theme-yat/basic/2024/04/08/xsl.html"><![CDATA[<h2 id="xslt">XSLT</h2>

<p><code class="language-plaintext highlighter-rouge">XSLT</code>는 XML 문서를 XHTML 문서나 다른 XML 타입의 문서로 변환하기 위해 사용한다.</p>

<p>W3C 표준 권고안으로, XSL에서 가장 중요한 언어다.</p>

<p>변환과정에서 XSLT는 <code class="language-plaintext highlighter-rouge">XPath</code>를 이용해 XML 문서에 필요한 정보를 찾는 역할을 한다.</p>

<p>현재 대부분 주요 웹 브라우저는 XSLT와 XPath를 지원하고 있다.</p>

<h2 id="1-transformation-process">1. Transformation Process</h2>

<p>XSLT의 변환 과정은 크게 두가지로 이루어진다.</p>

<ol>
  <li>
    <p>변환(Transformation) : XML 문서를 다른 구조의 XMl 문서로 변환하는 과정</p>
  </li>
  <li>
    <p>서식 설정(Formatting) : XML 문서를 특정 데이터 구조의 비 XML 문서로 변환하는 과정</p>
  </li>
</ol>

<p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/8c902bbd-f70b-449e-a549-77755e03f0db" alt="image" /></p>

<h3 id="1-1-xslt-변환">1-1. XSLT 변환</h3>

<p>변환될 데이터를 가지고 있는 XML 문서와 변환에 대한 규칙을 가지고 있는 XSLT 문서만 있으면 변환을 진행할 수 있다.</p>

<p>아래는 XML 문서를 well-formed HTML 문서로 바꾸는 과정이다.</p>

<details>
  
  <summary><a>예제 코드 보기</a></summary>

  <div>

    <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- XML 문서 --&gt;</span>
<span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>

<span class="nt">&lt;programming_languages&gt;</span>
  <span class="nt">&lt;language&gt;</span>
    <span class="nt">&lt;name&gt;</span>HTML<span class="nt">&lt;/name&gt;</span>
    <span class="nt">&lt;category&gt;</span>web<span class="nt">&lt;/category&gt;</span>
    <span class="nt">&lt;developer&gt;</span>W3C<span class="nt">&lt;/developer&gt;</span>
    <span class="nt">&lt;version</span> <span class="na">status=</span><span class="s">"working draft"</span><span class="nt">&gt;</span>5.1<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;priority</span> <span class="na">rating=</span><span class="s">"1"</span><span class="nt">&gt;</span>high<span class="nt">&lt;/priority&gt;</span>
  <span class="nt">&lt;/language&gt;</span>

  ...

  <span class="nt">&lt;language&gt;</span>
    <span class="nt">&lt;name</span> <span class="na">korean=</span><span class="s">"파이썬"</span><span class="nt">&gt;</span>Python<span class="nt">&lt;/name&gt;</span>
    <span class="nt">&lt;category&gt;</span>application<span class="nt">&lt;/category&gt;</span>
    <span class="nt">&lt;developer&gt;</span>Python<span class="nt">&lt;/developer&gt;</span>
    <span class="nt">&lt;version</span> <span class="na">status=</span><span class="s">"stable"</span><span class="nt">&gt;</span>3.52<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;priority</span> <span class="na">rating=</span><span class="s">"4"</span><span class="nt">&gt;</span>middle<span class="nt">&lt;/priority&gt;</span>
  <span class="nt">&lt;/language&gt;</span>
<span class="nt">&lt;/programming_languages&gt;</span>
</code></pre></div>    </div>

  </div>
</details>

<h4 id="1단계--xslt-문서-작성">1단계 : XSLT 문서 작성</h4>
<details>
  
  <summary><a>코드 보기</a></summary>

  <div>

    <pre><code class="language-xsl">&lt;!-- XSLT 문서 작성 --&gt;
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
  &lt;xsl:output method="html"/&gt;
  &lt;xsl:template match="/"&gt;

    &lt;html&gt;
      &lt;body&gt;
        &lt;h2 style="text-align:center"&gt;프로그래밍 언어&lt;/h2&gt;
        &lt;table border="1" style="width: 50%; margin: auto"&gt;
          &lt;tr&gt;
            &lt;th&gt;이름&lt;/th&gt;
            &lt;th&gt;종류&lt;/th&gt;
            &lt;th&gt;개발사&lt;/th&gt;
            &lt;th&gt;버전&lt;/th&gt;
            &lt;th&gt;중요도&lt;/th&gt;
          &lt;/tr&gt;
          &lt;xsl:for-each select="programming_languages/language"&gt;
            &lt;tr&gt;
              &lt;td&gt;&lt;xsl:value-of select="name"/&gt;&lt;/td&gt;
              &lt;td&gt;&lt;xsl:value-of select="category"/&gt;&lt;/td&gt;
              &lt;td&gt;&lt;xsl:value-of select="developer"/&gt;&lt;/td&gt;
              &lt;td&gt;&lt;xsl:value-of select="version"/&gt;&lt;/td&gt;
              &lt;td&gt;&lt;xsl:value-of select="priority"/&gt;&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/xsl:for-each&gt;
        &lt;/table&gt;
      &lt;/body&gt;
    &lt;/html&gt;

  &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</code></pre>
  </div>
</details>

<h4 id="2단계--xml-문서에-xslt-문서를-연결">2단계 : XML 문서에 XSLT 문서를 연결</h4>
<details>
  
  <summary><a>코드 보기</a></summary>

  <div>

    <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="c">&lt;!-- XML 문서에 XSLT 문서를 연결해주는 코드 작성 --&gt;</span>
<span class="cp">&lt;?xml-stylesheet type="text/xsl" href="xml_xslt_01.xsl"?&gt;</span>

<span class="nt">&lt;programming_languages&gt;</span>
    <span class="nt">&lt;language&gt;</span>
        <span class="nt">&lt;name&gt;</span>HTML<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;category&gt;</span>web<span class="nt">&lt;/category&gt;</span>
        <span class="nt">&lt;developer&gt;</span>W3C<span class="nt">&lt;/developer&gt;</span>
        <span class="nt">&lt;version</span> <span class="na">status=</span><span class="s">"working draft"</span><span class="nt">&gt;</span>5.1<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;priority</span> <span class="na">rating=</span><span class="s">"1"</span><span class="nt">&gt;</span>high<span class="nt">&lt;/priority&gt;</span>
    <span class="nt">&lt;/language&gt;</span>
    <span class="nt">&lt;language&gt;</span>
        <span class="nt">&lt;name&gt;</span>CSS<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;category&gt;</span>web<span class="nt">&lt;/category&gt;</span>
        <span class="nt">&lt;developer&gt;</span>W3C<span class="nt">&lt;/developer&gt;</span>
        <span class="nt">&lt;version</span> <span class="na">status=</span><span class="s">"stable"</span><span class="nt">&gt;</span>3.0<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;priority</span> <span class="na">rating=</span><span class="s">"3"</span><span class="nt">&gt;</span>middle<span class="nt">&lt;/priority&gt;</span>
    <span class="nt">&lt;/language&gt;</span>
    <span class="nt">&lt;language&gt;</span>
        <span class="nt">&lt;name</span> <span class="na">korean=</span><span class="s">"자바"</span><span class="nt">&gt;</span>Java<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;category&gt;</span>application<span class="nt">&lt;/category&gt;</span>
        <span class="nt">&lt;developer&gt;</span>Oracle<span class="nt">&lt;/developer&gt;</span>
        <span class="nt">&lt;version</span> <span class="na">status=</span><span class="s">"stable"</span><span class="nt">&gt;</span>8.91<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;priority</span> <span class="na">rating=</span><span class="s">"2"</span><span class="nt">&gt;</span>high<span class="nt">&lt;/priority&gt;</span>
    <span class="nt">&lt;/language&gt;</span>
    <span class="nt">&lt;language&gt;</span>
        <span class="nt">&lt;name</span> <span class="na">korean=</span><span class="s">"파이썬"</span><span class="nt">&gt;</span>Python<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;category&gt;</span>application<span class="nt">&lt;/category&gt;</span>
        <span class="nt">&lt;developer&gt;</span>Python<span class="nt">&lt;/developer&gt;</span>
        <span class="nt">&lt;version</span> <span class="na">status=</span><span class="s">"stable"</span><span class="nt">&gt;</span>3.52<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;priority</span> <span class="na">rating=</span><span class="s">"4"</span><span class="nt">&gt;</span>middle<span class="nt">&lt;/priority&gt;</span>
    <span class="nt">&lt;/language&gt;</span>
<span class="nt">&lt;/programming_languages&gt;</span>
</code></pre></div>    </div>

  </div>
</details>

<h4 id="3단계--웹-브라우저에서-xml-문서-확인">3단계 : 웹 브라우저에서 XML 문서 확인</h4>
<details>
  
  <summary><a>결과 보기</a></summary>

  <div>

    <p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/6ca6ac61-dd1e-4995-b756-2c93db1938df" alt="image" /></p>

    <p>확인 시 XML 문서가 HTML로 변환되어 나온 것을 볼 수 있다.</p>

  </div>
</details>

<h3 id="2-template">2. Template</h3>

<h4 id="2-1-루트요소">2-1. 루트요소</h4>

<p>XSLT 문서의 루트 요소는 <code class="language-plaintext highlighter-rouge">&lt;xsl:stylesheet&gt;</code>나 ` <xsl:transform>`요소로 표현될 수 있다.</xsl:transform></p>

<p>또한, 루트 요소의 시작 태그에는 W3C XSLT 네임스페이스를 반드시 같이 명시해야 한다.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="c">&lt;!-- 'xsl:stylesheet'로 루트 요소 명시, `xmlns:xsl="..."` 네임스페이스 명시 --&gt;</span>
<span class="nt">&lt;xsl:stylesheet</span> <span class="na">version=</span><span class="s">"2.0"</span> <span class="na">xmlns:xsl=</span><span class="s">"http://www.w3.org/1999/XSL/Transform"</span><span class="nt">&gt;</span>
...
<span class="nt">&lt;/xsl:stylesheet&gt;</span>

<span class="c">&lt;!-- 또는 --&gt;</span>

<span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;xsl:transform</span> <span class="na">version=</span><span class="s">"2.0"</span> <span class="na">xmlns:xsl=</span><span class="s">"http://www.w3.org/1999/XSL/Transform"</span><span class="nt">&gt;</span>
...
<span class="nt">&lt;/xsl:transform&gt;</span>
</code></pre></div></div>

<p>둘 다 같은 동작을 수행하기 때문에 어느 걸 사용해도 좋다.</p>

<h4 id="2-2-템플릿-작성">2-2. 템플릿 작성</h4>

<p>XSLT 프로세서가 XSLT 문서에서 가장 먼저 찾는 요소는 템플릿 요소이다.</p>

<p>템플릿은 <strong>특정 노드가 일치할 때 해당 노드에 적용할 규칙들을 포함</strong>한다.</p>

<p>이런 템플릿은 루트 노드에 포함된 컨텐츠를 어떻게 처리하고 변환할 지 나타낸다.</p>

<p><code class="language-plaintext highlighter-rouge">&lt;xsl:template&gt;</code> 요소로 표현할 수 있으며 <code class="language-plaintext highlighter-rouge">match</code> 속성에는 속성값으로 연결할 XML 요소 범위를 나타내는 <code class="language-plaintext highlighter-rouge">XPath</code> 표현식을 명시한다.</p>

<pre><code class="language-xsl">&lt;xsl:template match="/"&gt;
</code></pre>

<h4 id="2-3-템플릿-적용">2-3. 템플릿 적용</h4>

<p><code class="language-plaintext highlighter-rouge">&lt;xsl:apply-template&gt;</code>요소는 특정 노드나 특정 노드의 자식 노드에 템플릿을 적용할 때 사용한다.</p>

<p>아래는 <code class="language-plaintext highlighter-rouge">&lt;name&gt;</code>, <code class="language-plaintext highlighter-rouge">&lt;category&gt;</code> 요소에만 별도 템플릿을 적용하는 예제이다.</p>

<details>
  
  <summary><a>XSL 파일 코드</a></summary>

  <div>

    <pre><code class="language-xsl">&lt;!-- XSL 파일 --&gt;
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
  &lt;xsl:output method="html"/&gt;

  &lt;xsl:template match="/"&gt;
    &lt;html&gt;
      &lt;body&gt;
        &lt;h2 style="text-align:center"&gt;프로그래밍 언어&lt;/h2&gt;
        &lt;xsl:apply-templates/&gt;
      &lt;/body&gt;
    &lt;/html&gt;
  &lt;/xsl:template&gt;

  &lt;xsl:template match="language"&gt;
    &lt;p&gt;
      &lt;xsl:apply-templates select="name"/&gt;
      &lt;xsl:apply-templates select="category"/&gt;
    &lt;/p&gt;
  &lt;/xsl:template&gt;

  &lt;xsl:template match="name"&gt;
    언어 이름 : &lt;strong&gt;
    &lt;xsl:value-of select="."/&gt;&lt;/strong&gt;&lt;br/&gt;
  &lt;/xsl:template&gt;

  &lt;xsl:template match="category"&gt;
    카테고리 : &lt;span style="color: green"&gt;
    &lt;xsl:value-of select="."/&gt;&lt;/span&gt;&lt;br/&gt;
  &lt;/xsl:template&gt;
 
&lt;/xsl:stylesheet&gt;
</code></pre>

  </div>
</details>

<details>
  
  <summary><a>XML 파일 코드</a></summary>

  <div>

    <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- XML 파일 --&gt;</span>
<span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="cp">&lt;?xml-stylesheet type="text/xsl" href="xml_xslt_02.xsl"?&gt;</span>

<span class="nt">&lt;programming_languages&gt;</span>
  <span class="nt">&lt;language&gt;</span>
    <span class="nt">&lt;name&gt;</span>HTML<span class="nt">&lt;/name&gt;</span>
    <span class="nt">&lt;category&gt;</span>web<span class="nt">&lt;/category&gt;</span>
    <span class="nt">&lt;developer&gt;</span>W3C<span class="nt">&lt;/developer&gt;</span>
    <span class="nt">&lt;version</span> <span class="na">status=</span><span class="s">"working draft"</span><span class="nt">&gt;</span>5.1<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;priority</span> <span class="na">rating=</span><span class="s">"1"</span><span class="nt">&gt;</span>high<span class="nt">&lt;/priority&gt;</span>
  <span class="nt">&lt;/language&gt;</span>

  <span class="nt">&lt;language&gt;</span>
    <span class="nt">&lt;name&gt;</span>CSS<span class="nt">&lt;/name&gt;</span>
    <span class="nt">&lt;category&gt;</span>web<span class="nt">&lt;/category&gt;</span>
    <span class="nt">&lt;developer&gt;</span>W3C<span class="nt">&lt;/developer&gt;</span>
    <span class="nt">&lt;version</span> <span class="na">status=</span><span class="s">"stable"</span><span class="nt">&gt;</span>3.0<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;priority</span> <span class="na">rating=</span><span class="s">"3"</span><span class="nt">&gt;</span>middle<span class="nt">&lt;/priority&gt;</span>
  <span class="nt">&lt;/language&gt;</span>

  <span class="nt">&lt;language&gt;</span>
    <span class="nt">&lt;name</span> <span class="na">korean=</span><span class="s">"자바"</span><span class="nt">&gt;</span>Java<span class="nt">&lt;/name&gt;</span>
    <span class="nt">&lt;category&gt;</span>application<span class="nt">&lt;/category&gt;</span>
    <span class="nt">&lt;developer&gt;</span>Oracle<span class="nt">&lt;/developer&gt;</span>
    <span class="nt">&lt;version</span> <span class="na">status=</span><span class="s">"stable"</span><span class="nt">&gt;</span>8.91<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;priority</span> <span class="na">rating=</span><span class="s">"2"</span><span class="nt">&gt;</span>high<span class="nt">&lt;/priority&gt;</span>
  <span class="nt">&lt;/language&gt;</span>

  <span class="nt">&lt;language&gt;</span>
    <span class="nt">&lt;name</span> <span class="na">korean=</span><span class="s">"파이썬"</span><span class="nt">&gt;</span>Python<span class="nt">&lt;/name&gt;</span>
    <span class="nt">&lt;category&gt;</span>application<span class="nt">&lt;/category&gt;</span>
    <span class="nt">&lt;developer&gt;</span>Python<span class="nt">&lt;/developer&gt;</span>
    <span class="nt">&lt;version</span> <span class="na">status=</span><span class="s">"stable"</span><span class="nt">&gt;</span>3.52<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;priority</span> <span class="na">rating=</span><span class="s">"4"</span><span class="nt">&gt;</span>middle<span class="nt">&lt;/priority&gt;</span>
  <span class="nt">&lt;/language&gt;</span>

<span class="nt">&lt;/programming_languages&gt;</span>
</code></pre></div>    </div>

  </div>
</details>

<details>
  
  <summary><a>결과</a></summary>

  <div>

    <p><img src="https://github.com/bonazoey/bonazoey.github.io/assets/142956374/b6ead134-06e0-4574-827e-85f14b179ad8" alt="image" /></p>

  </div>
</details>

<h2 id="3-노드의-처리">3. 노드의 처리</h2>

<h3 id="3-1-반복-처리">3-1. 반복 처리</h3>

<p><code class="language-plaintext highlighter-rouge">&lt;xsl:for-each&gt;</code> 요소는 선택된 각 노드에 반복해서 템플릿을 적용시켜준다.</p>

<p>이 요소는 <code class="language-plaintext highlighter-rouge">select</code> 속성으로 전달받은 XPath 표현식에 따라 선택된 노드의 개수만큼 반복해서 템플릿을 적용한다.</p>

<p>다음 예제는 <programming_languages>요소의 자식 요소인 <language>요소의 개수만큼 반복해서 템플릿을 적용하는 예제이다.</language></programming_languages></p>

<pre><code class="language-xsl">&lt;xsl:for-each select="programming_languages/language"&gt;
...
&lt;/xsl:for-each&gt;
</code></pre>

<h3 id="3-2-값-출력">3-2. 값 출력</h3>

<p><code class="language-plaintext highlighter-rouge">&lt;xsl:value-of&gt;</code> 요소는 선택된 노드에서 데이터를 추출한다.</p>

<p><code class="language-plaintext highlighter-rouge">select</code> 속성으로 전달받은 XPath 표현식에 따라 선택된 노드의 값을 텍스트로 추출하여 해당 위치에 삽입한다.</p>

<p>아래는 <name>요소의 값을 추출하여 텍스트로 삽입하는 예제이다.</name></p>

<pre><code class="language-xsl">&lt;xsl:value-of select="name"/&gt;
</code></pre>

<h3 id="3-3-정렬">3-3. 정렬</h3>

<p><code class="language-plaintext highlighter-rouge">&lt;xsl:sort&gt;</code>요소는 노드들의 정렬 기준을 명시할 때 사용한다.</p>

<p>아래는 문법 예시이다.</p>

<pre><code class="language-xsl">&lt;xsl:sort
  select = string-expression
  lang = { nmtoken }
  data-type = { \"text\" | \"number\" | qname-but-not-ncname }
  order = { \"ascending\" | \"descending\" }
  case-order = { \"upper-first\" | \"lower-first\" } /&gt;
</code></pre>
<p>| 속성 | 속성값 |
| :—: | :— |
| select | 노드를 정렬하기 위해 기준이 되는 키(key)를 명시합니다. |
| lang | 정렬 순서를 결정하는데 사용되는 영문자를 명시합니다. |
| data-type | 텍스트의 타입을 명시합니다. |
| order | 정렬 순서를 명시하며, 기본 설정값은 오름차순(ascending)입니다. |
| case-order | 대소문자에 의한 문자열의 정렬 순서를 명시하며, 기본 설정값은 대문자가 먼저(upper-first)입니다. |</p>

<h3 id="3-4-조건부-처리">3-4. 조건부 처리</h3>

<p><code class="language-plaintext highlighter-rouge">&lt;xsl:if&gt;</code>요소는 노드의 값이 특정 조건에 해당할 때만 동작한다.</p>

<p>test 속성으로 전달받은 표현식이 참인 경우에만 실행한다.</p>

<p>아래는 예제이다.</p>

<pre><code class="language-xsl">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
  &lt;xsl:output method="html"/&gt;
  &lt;xsl:template match="/"&gt;

    &lt;html&gt;
      &lt;body&gt;
        &lt;h2 style="text-align:center"&gt;버전이 5.0 이상인 언어&lt;/h2&gt;
        &lt;xsl:for-each select="programming_languages/language"&gt;
          &lt;xsl:if test="version &amp;gt; 5"&gt;
            &lt;xsl:value-of select="name"/&gt; : ver.
            &lt;xsl:value-of select="version"/&gt;&lt;br/&gt;
          &lt;/xsl:if&gt;
        &lt;/xsl:for-each&gt;
      &lt;/body&gt;
    &lt;/html&gt;

  &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</code></pre>

<p>버전이 5 이상인 언어만 출력한다.</p>

<h3 id="3-5-다중-조건부-처리">3-5. 다중 조건부 처리</h3>

<p><code class="language-plaintext highlighter-rouge">&lt;xsl:choose&gt;</code>요소는 <code class="language-plaintext highlighter-rouge">&lt;xsl:when&gt;</code>과 <code class="language-plaintext highlighter-rouge">&lt;xsl:otherwise&gt;</code>요소와 함께 다중 조건문을 작성할 때 사용한다.</p>

<p><code class="language-plaintext highlighter-rouge">&lt;xsl:when&gt;</code>요소는 <code class="language-plaintext highlighter-rouge">test</code> 속성으로 전달받은 표현식이 참인 경우에만 실행한다.</p>

<p>거짓인 경우에는 실행하지 않으며 <code class="language-plaintext highlighter-rouge">&lt;xsl:otherwise&gt;</code>요소가 실행된다.</p>

<p>아래는 예제이다.</p>

<pre><code class="language-xsl">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
  &lt;xsl:output method="html"/&gt;
  &lt;xsl:template match="/"&gt;

    &lt;html&gt;
      &lt;body&gt;
        &lt;h2 style="text-align:center"&gt;노드의 다중 조건부 처리&lt;/h2&gt;
        &lt;xsl:for-each select="programming_languages/language"&gt;
          &lt;xsl:choose&gt;
            &lt;xsl:when test="priority[@rating &amp;gt; 2]"&gt;
              &lt;xsl:value-of select="name"/&gt; : 나중에 꼭 공부해요!&lt;br/&gt;
            &lt;/xsl:when&gt;
            &lt;xsl:otherwise&gt;
              &lt;xsl:value-of select="name"/&gt; : 우선은 이 과목부터 공부하죠!&lt;br/&gt;
            &lt;/xsl:otherwise&gt;
          &lt;/xsl:choose&gt;
        &lt;/xsl:for-each&gt;
      &lt;/body&gt;
    &lt;/html&gt; 

  &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</code></pre>

<p><code class="language-plaintext highlighter-rouge">&lt;priority&gt;</code>요소의 rating 속성값이 2 이상 경우와, 그렇지 않은 경우에 다른 텍스트를 출력한다.</p>

<h2 id="4-end">4. End..</h2>

<p>XSLT는 HTML 문서에서 실행되기 때문에 간단한 느낌이 있고, 지난 웹 애플리케이션 프로젝트 때 사용했던 것과 (뭐였는지 기억이 잘 안 남) 노드의 처리가 방식이 비슷해서 쉽게 이해할 수 있었다.</p>

<p>XML 문서의 데이터를 HTML에 출력을 해주기 위한 언어기 때문에 가시적으로 보여서 습득에 용이한 것 같다.</p>]]></content><author><name>Bonazoey</name></author><category term="Basic" /><category term="Basic" /><category term="XML" /><summary type="html"><![CDATA[XSLT]]></summary></entry></feed>